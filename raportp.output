Terminals unused in grammar

    or
    aro
    commantaire
    UNARY_OPERATOR


Grammar

    0 $accept: Fonction $end

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction
    2         | mcPROGRAM identificateur DECLARATIONS INST_S mcEND

    3 DECLARATIONS: type identificateur caractere1 DECLARATIONS1

    4 caractere1: etoile INTEGER
    5           | ε

    6 DECLARATIONS1: point_virgule DECLARATIONS
    7              | point_virgule
    8              | virgule identificateur caractere1 DECLARATIONS1
    9              | mcDIMENSION paraO INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS2
   11              | eq VALEURS DECLARATIONS1

   12 DECLARATIONS2: point_virgule DECLARATIONS
   13              | point_virgule
   14              | virgule identificateur caractere1 DECLARATIONS1
   15              | mcDIMENSION paraO INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS1

   17 VALEURS: REAL
   18        | INTEGER
   19        | caracter
   20        | chaine

   21 type: mcINTEGER
   22     | mcLOGICAL
   23     | mcREAL
   24     | mcCHARACTER

   25 INST_S: INST_S INSTR point_virgule
   26       | INST_S Condition
   27       | ε

   28 INSTR: Affectation
   29      | ES
   30      | Boucle
   31      | Appel
   32      | Equivalence
   33      | ε

   34 Affectation: identificateur eq EXPR

   35 EXPR: CHAINE_STRING
   36     | MATH_VAR
   37     | APPEL_FONC
   38     | mcFALSE
   39     | mcTRUE

   40 APPEL_FONC: mcCALL identificateur paraO Liste paraF

   41 MATH_VAR: identificateur MATH_VAR1
   42         | identificateur paraO INTEGER paraF MATH_VAR1
   43         | identificateur paraO INTEGER virgule INTEGER paraF MATH_VAR1
   44         | INTEGER MATH_VAR1
   45         | INTEGERPOSITIF MATH_VAR1
   46         | INTEGERNEGATIF MATH_VAR1
   47         | REAL MATH_VAR1
   48         | REALPOSITIF MATH_VAR1
   49         | REALNEGATIF MATH_VAR1
   50         | paraO MATH_VAR paraF MATH_VAR1

   51 MATH_VAR1: OPER MATH_VAR
   52          | INTEGERNEGATIF OPER MATH_VAR
   53          | INTEGERPOSITIF OPER MATH_VAR
   54          | REALNEGATIF OPER MATH_VAR
   55          | REALPOSITIF OPER MATH_VAR
   56          | INTEGERNEGATIF
   57          | INTEGERPOSITIF
   58          | REALNEGATIF
   59          | REALPOSITIF
   60          | ε

   61 CHAINE_STRING: IDFI_CHAR CHAINE_STRING1

   62 CHAINE_STRING1: plus IDFI_CHAR CHAINE_STRING1
   63               | mpins IDFI_CHAR CHAINE_STRING1
   64               | ε

   65 IDFI_CHAR: chaine
   66          | caracter

   67 ES: mcREAD paraO identificateur paraF
   68   | mcWRITE paraO chaine paraF
   69   | mcWRITE paraO chaine ES_WRITE_OPTIONAL paraF

   70 ES_WRITE_OPTIONAL: virgule identificateur
   71                  | virgule identificateur chaine

   72 Appel: identificateur paraO Liste paraF

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste paraF

   74 Liste: identificateur
   75      | Liste virgule identificateur
   76      | Liste virgule identificateur paraO INTEGER paraF
   77      | Liste virgule identificateur paraO INTEGER virgule INTEGER paraF
   78      | identificateur paraO INTEGER virgule INTEGER paraF
   79      | identificateur paraO INTEGER paraF

   80 Boucle: mcDOWHILE paraO expression paraF INST_S mcENDDO

   81 Condition: mcIF paraO expression paraF mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO expression paraF mcTHEN INST_S mcENDIF

   83 expression: paraO expression paraF
   84           | expression point AND point expression
   85           | expression point OR point expression
   86           | comparison

   87 comparison: operand point EQ point operand
   88           | operand point GT point operand
   89           | operand point GE point operand
   90           | operand point NE point operand
   91           | operand point LE point operand
   92           | operand point LT point operand
   93           | ε

   94 operand: identificateur INTEGERPOSITIF
   95        | identificateur INTEGERNEGATIF
   96        | identificateur division operand
   97        | identificateur etoile operand
   98        | paraO operand paraF
   99        | identificateur
  100        | INTEGER
  101        | INTEGERPOSITIF
  102        | INTEGERNEGATIF
  103        | REAL
  104        | REALPOSITIF
  105        | REALNEGATIF
  106        | mcTRUE
  107        | mcFALSE

  108 OPER: plus
  109     | mpins
  110     | etoile
  111     | division


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    mcTRUE (258) 39 106
    mcFALSE (259) 38 107
    mcINTEGER <string> (260) 21
    mcREAL <string> (261) 23
    mcCHARACTER <string> (262) 24
    mcLOGICAL <string> (263) 22
    mcREAD <string> (264) 67
    mcWRITE <string> (265) 68 69
    mcDIMENSION <string> (266) 9 10 15 16
    mcPROGRAM <string> (267) 2
    mcEND <string> (268) 2
    mcROUTINE <string> (269) 1
    mcENDR <string> (270) 1
    mcCALL <string> (271) 40
    mcIF <string> (272) 81 82
    mcTHEN <string> (273) 81 82
    mcELSE <string> (274) 81
    mcENDIF <string> (275) 81 82
    mcDOWHILE <string> (276) 80
    mcENDDO <string> (277) 80
    PartageMemoire <string> (278) 73
    OR (279) 85
    AND (280) 84
    GT (281) 88
    EQ (282) 87
    GE (283) 89
    NE (284) 90
    LE (285) 91
    LT (286) 92
    eq (287) 1 11 34
    point_virgule (288) 6 7 12 13 25
    point (289) 84 85 87 88 89 90 91 92
    plus (290) 62 108
    mpins (291) 63 109
    division (292) 96 111
    or (293)
    aro (294)
    etoile (295) 4 97 110
    virgule (296) 8 10 14 16 43 70 71 73 75 76 77 78
    paraO (297) 1 9 10 15 16 40 42 43 50 67 68 69 72 73 76 77 78 79 80 81 82 83 98
    paraF (298) 1 9 10 15 16 40 42 43 50 67 68 69 72 73 76 77 78 79 80 81 82 83 98
    identificateur <string> (299) 1 2 3 8 14 34 40 41 42 43 67 70 71 72 74 75 76 77 78 79 94 95 96 97 99
    INTEGER <entier> (300) 4 9 10 15 16 18 42 43 44 76 77 78 79 100
    INTEGERPOSITIF <entier> (301) 45 53 57 94 101
    INTEGERNEGATIF <entier> (302) 46 52 56 95 102
    REAL <real> (303) 17 47 103
    caracter <caracter> (304) 19 66
    chaine <string> (305) 20 65 68 69 71
    commantaire <string> (306)
    REALNEGATIF <real> (307) 49 54 58 105
    REALPOSITIF <real> (308) 48 55 59 104
    UNARY_OPERATOR (309)


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    Fonction (56)
        on left: 1 2
        on right: 0 1
    DECLARATIONS (57)
        on left: 3
        on right: 1 2 6 12
    caractere1 (58)
        on left: 4 5
        on right: 3 8 14
    DECLARATIONS1 (59)
        on left: 6 7 8 9 10 11
        on right: 3 8 11 14 15 16
    DECLARATIONS2 (60)
        on left: 12 13 14 15 16
        on right: 9 10
    VALEURS (61)
        on left: 17 18 19 20
        on right: 11
    type (62)
        on left: 21 22 23 24
        on right: 1 3
    INST_S (63)
        on left: 25 26 27
        on right: 1 2 25 26 80 81 82
    INSTR (64)
        on left: 28 29 30 31 32 33
        on right: 25
    Affectation (65)
        on left: 34
        on right: 28
    EXPR (66)
        on left: 35 36 37 38 39
        on right: 1 34
    APPEL_FONC (67)
        on left: 40
        on right: 37
    MATH_VAR (68)
        on left: 41 42 43 44 45 46 47 48 49 50
        on right: 36 50 51 52 53 54 55
    MATH_VAR1 (69)
        on left: 51 52 53 54 55 56 57 58 59 60
        on right: 41 42 43 44 45 46 47 48 49 50
    CHAINE_STRING (70)
        on left: 61
        on right: 35
    CHAINE_STRING1 (71)
        on left: 62 63 64
        on right: 61 62 63
    IDFI_CHAR (72)
        on left: 65 66
        on right: 61 62 63
    ES (73)
        on left: 67 68 69
        on right: 29
    ES_WRITE_OPTIONAL (74)
        on left: 70 71
        on right: 69
    Appel (75)
        on left: 72
        on right: 31
    Equivalence (76)
        on left: 73
        on right: 32
    Liste (77)
        on left: 74 75 76 77 78 79
        on right: 1 40 72 73 75 76 77
    Boucle (78)
        on left: 80
        on right: 30
    Condition (79)
        on left: 81 82
        on right: 26
    expression (80)
        on left: 83 84 85 86
        on right: 80 81 82 83 84 85
    comparison (81)
        on left: 87 88 89 90 91 92 93
        on right: 86
    operand (82)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107
        on right: 87 88 89 90 91 92 96 97 98
    OPER (83)
        on left: 108 109 110 111
        on right: 51 52 53 54 55


State 0

    0 $accept: • Fonction $end

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4
    mcPROGRAM    shift, and go to state 5

    Fonction  go to state 6
    type      go to state 7


State 1

   21 type: mcINTEGER •

    $default  reduce using rule 21 (type)


State 2

   23 type: mcREAL •

    $default  reduce using rule 23 (type)


State 3

   24 type: mcCHARACTER •

    $default  reduce using rule 24 (type)


State 4

   22 type: mcLOGICAL •

    $default  reduce using rule 22 (type)


State 5

    2 Fonction: mcPROGRAM • identificateur DECLARATIONS INST_S mcEND

    identificateur  shift, and go to state 8


State 6

    0 $accept: Fonction • $end

    $end  shift, and go to state 9


State 7

    1 Fonction: type • mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    mcROUTINE  shift, and go to state 10


State 8

    2 Fonction: mcPROGRAM identificateur • DECLARATIONS INST_S mcEND

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    DECLARATIONS  go to state 11
    type          go to state 12


State 9

    0 $accept: Fonction $end •

    $default  accept


State 10

    1 Fonction: type mcROUTINE • identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    identificateur  shift, and go to state 13


State 11

    2 Fonction: mcPROGRAM identificateur DECLARATIONS • INST_S mcEND

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 14


State 12

    3 DECLARATIONS: type • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 15


State 13

    1 Fonction: type mcROUTINE identificateur • paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    paraO  shift, and go to state 16


State 14

    2 Fonction: mcPROGRAM identificateur DECLARATIONS INST_S • mcEND
   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcEND           shift, and go to state 19
    mcIF            shift, and go to state 20
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 15

    3 DECLARATIONS: type identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 32


State 16

    1 Fonction: type mcROUTINE identificateur paraO • Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    identificateur  shift, and go to state 33

    Liste  go to state 34


State 17

   67 ES: mcREAD • paraO identificateur paraF

    paraO  shift, and go to state 35


State 18

   68 ES: mcWRITE • paraO chaine paraF
   69   | mcWRITE • paraO chaine ES_WRITE_OPTIONAL paraF

    paraO  shift, and go to state 36


State 19

    2 Fonction: mcPROGRAM identificateur DECLARATIONS INST_S mcEND •

    $default  reduce using rule 2 (Fonction)


State 20

   81 Condition: mcIF • paraO expression paraF mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF • paraO expression paraF mcTHEN INST_S mcENDIF

    paraO  shift, and go to state 37


State 21

   80 Boucle: mcDOWHILE • paraO expression paraF INST_S mcENDDO

    paraO  shift, and go to state 38


State 22

   73 Equivalence: PartageMemoire • paraO Liste paraF virgule paraO Liste paraF

    paraO  shift, and go to state 39


State 23

   34 Affectation: identificateur • eq EXPR
   72 Appel: identificateur • paraO Liste paraF

    eq     shift, and go to state 40
    paraO  shift, and go to state 41


State 24

   25 INST_S: INST_S INSTR • point_virgule

    point_virgule  shift, and go to state 42


State 25

   28 INSTR: Affectation •

    $default  reduce using rule 28 (INSTR)


State 26

   29 INSTR: ES •

    $default  reduce using rule 29 (INSTR)


State 27

   31 INSTR: Appel •

    $default  reduce using rule 31 (INSTR)


State 28

   32 INSTR: Equivalence •

    $default  reduce using rule 32 (INSTR)


State 29

   30 INSTR: Boucle •

    $default  reduce using rule 30 (INSTR)


State 30

   26 INST_S: INST_S Condition •

    $default  reduce using rule 26 (INST_S)


State 31

    4 caractere1: etoile • INTEGER

    INTEGER  shift, and go to state 43


State 32

    3 DECLARATIONS: type identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 48


State 33

   74 Liste: identificateur •
   78      | identificateur • paraO INTEGER virgule INTEGER paraF
   79      | identificateur • paraO INTEGER paraF

    paraO  shift, and go to state 49

    $default  reduce using rule 74 (Liste)


State 34

    1 Fonction: type mcROUTINE identificateur paraO Liste • paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 51


State 35

   67 ES: mcREAD paraO • identificateur paraF

    identificateur  shift, and go to state 52


State 36

   68 ES: mcWRITE paraO • chaine paraF
   69   | mcWRITE paraO • chaine ES_WRITE_OPTIONAL paraF

    chaine  shift, and go to state 53


State 37

   81 Condition: mcIF paraO • expression paraF mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO • expression paraF mcTHEN INST_S mcENDIF

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    $default  reduce using rule 93 (comparison)

    expression  go to state 64
    comparison  go to state 65
    operand     go to state 66


State 38

   80 Boucle: mcDOWHILE paraO • expression paraF INST_S mcENDDO

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    $default  reduce using rule 93 (comparison)

    expression  go to state 67
    comparison  go to state 65
    operand     go to state 66


State 39

   73 Equivalence: PartageMemoire paraO • Liste paraF virgule paraO Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 68


State 40

   34 Affectation: identificateur eq • EXPR

    mcTRUE          shift, and go to state 69
    mcFALSE         shift, and go to state 70
    mcCALL          shift, and go to state 71
    paraO           shift, and go to state 72
    identificateur  shift, and go to state 73
    INTEGER         shift, and go to state 74
    INTEGERPOSITIF  shift, and go to state 75
    INTEGERNEGATIF  shift, and go to state 76
    REAL            shift, and go to state 77
    caracter        shift, and go to state 78
    chaine          shift, and go to state 79
    REALNEGATIF     shift, and go to state 80
    REALPOSITIF     shift, and go to state 81

    EXPR           go to state 82
    APPEL_FONC     go to state 83
    MATH_VAR       go to state 84
    CHAINE_STRING  go to state 85
    IDFI_CHAR      go to state 86


State 41

   72 Appel: identificateur paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 87


State 42

   25 INST_S: INST_S INSTR point_virgule •

    $default  reduce using rule 25 (INST_S)


State 43

    4 caractere1: etoile INTEGER •

    $default  reduce using rule 4 (caractere1)


State 44

    9 DECLARATIONS1: mcDIMENSION • paraO INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION • paraO INTEGER virgule INTEGER paraF DECLARATIONS2

    paraO  shift, and go to state 88


State 45

   11 DECLARATIONS1: eq • VALEURS DECLARATIONS1

    INTEGER   shift, and go to state 89
    REAL      shift, and go to state 90
    caracter  shift, and go to state 91
    chaine    shift, and go to state 92

    VALEURS  go to state 93


State 46

    6 DECLARATIONS1: point_virgule • DECLARATIONS
    7              | point_virgule •

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    $default  reduce using rule 7 (DECLARATIONS1)

    DECLARATIONS  go to state 94
    type          go to state 12


State 47

    8 DECLARATIONS1: virgule • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 95


State 48

    3 DECLARATIONS: type identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 3 (DECLARATIONS)


State 49

   78 Liste: identificateur paraO • INTEGER virgule INTEGER paraF
   79      | identificateur paraO • INTEGER paraF

    INTEGER  shift, and go to state 96


State 50

   75 Liste: Liste virgule • identificateur
   76      | Liste virgule • identificateur paraO INTEGER paraF
   77      | Liste virgule • identificateur paraO INTEGER virgule INTEGER paraF

    identificateur  shift, and go to state 97


State 51

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF • DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    DECLARATIONS  go to state 98
    type          go to state 12


State 52

   67 ES: mcREAD paraO identificateur • paraF

    paraF  shift, and go to state 99


State 53

   68 ES: mcWRITE paraO chaine • paraF
   69   | mcWRITE paraO chaine • ES_WRITE_OPTIONAL paraF

    virgule  shift, and go to state 100
    paraF    shift, and go to state 101

    ES_WRITE_OPTIONAL  go to state 102


State 54

  106 operand: mcTRUE •

    $default  reduce using rule 106 (operand)


State 55

  107 operand: mcFALSE •

    $default  reduce using rule 107 (operand)


State 56

   83 expression: paraO • expression paraF
   98 operand: paraO • operand paraF

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    $default  reduce using rule 93 (comparison)

    expression  go to state 103
    comparison  go to state 65
    operand     go to state 104


State 57

   94 operand: identificateur • INTEGERPOSITIF
   95        | identificateur • INTEGERNEGATIF
   96        | identificateur • division operand
   97        | identificateur • etoile operand
   99        | identificateur •

    division        shift, and go to state 105
    etoile          shift, and go to state 106
    INTEGERPOSITIF  shift, and go to state 107
    INTEGERNEGATIF  shift, and go to state 108

    $default  reduce using rule 99 (operand)


State 58

  100 operand: INTEGER •

    $default  reduce using rule 100 (operand)


State 59

  101 operand: INTEGERPOSITIF •

    $default  reduce using rule 101 (operand)


State 60

  102 operand: INTEGERNEGATIF •

    $default  reduce using rule 102 (operand)


State 61

  103 operand: REAL •

    $default  reduce using rule 103 (operand)


State 62

  105 operand: REALNEGATIF •

    $default  reduce using rule 105 (operand)


State 63

  104 operand: REALPOSITIF •

    $default  reduce using rule 104 (operand)


State 64

   81 Condition: mcIF paraO expression • paraF mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO expression • paraF mcTHEN INST_S mcENDIF
   84 expression: expression • point AND point expression
   85           | expression • point OR point expression

    point  shift, and go to state 109
    paraF  shift, and go to state 110


State 65

   86 expression: comparison •

    $default  reduce using rule 86 (expression)


State 66

   87 comparison: operand • point EQ point operand
   88           | operand • point GT point operand
   89           | operand • point GE point operand
   90           | operand • point NE point operand
   91           | operand • point LE point operand
   92           | operand • point LT point operand

    point  shift, and go to state 111


State 67

   80 Boucle: mcDOWHILE paraO expression • paraF INST_S mcENDDO
   84 expression: expression • point AND point expression
   85           | expression • point OR point expression

    point  shift, and go to state 109
    paraF  shift, and go to state 112


State 68

   73 Equivalence: PartageMemoire paraO Liste • paraF virgule paraO Liste paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 113


State 69

   39 EXPR: mcTRUE •

    $default  reduce using rule 39 (EXPR)


State 70

   38 EXPR: mcFALSE •

    $default  reduce using rule 38 (EXPR)


State 71

   40 APPEL_FONC: mcCALL • identificateur paraO Liste paraF

    identificateur  shift, and go to state 114


State 72

   50 MATH_VAR: paraO • MATH_VAR paraF MATH_VAR1

    paraO           shift, and go to state 72
    identificateur  shift, and go to state 73
    INTEGER         shift, and go to state 74
    INTEGERPOSITIF  shift, and go to state 75
    INTEGERNEGATIF  shift, and go to state 76
    REAL            shift, and go to state 77
    REALNEGATIF     shift, and go to state 80
    REALPOSITIF     shift, and go to state 81

    MATH_VAR  go to state 115


State 73

   41 MATH_VAR: identificateur • MATH_VAR1
   42         | identificateur • paraO INTEGER paraF MATH_VAR1
   43         | identificateur • paraO INTEGER virgule INTEGER paraF MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    paraO           shift, and go to state 120
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 125
    OPER       go to state 126


State 74

   44 MATH_VAR: INTEGER • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 127
    OPER       go to state 126


State 75

   45 MATH_VAR: INTEGERPOSITIF • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 128
    OPER       go to state 126


State 76

   46 MATH_VAR: INTEGERNEGATIF • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 129
    OPER       go to state 126


State 77

   47 MATH_VAR: REAL • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 130
    OPER       go to state 126


State 78

   66 IDFI_CHAR: caracter •

    $default  reduce using rule 66 (IDFI_CHAR)


State 79

   65 IDFI_CHAR: chaine •

    $default  reduce using rule 65 (IDFI_CHAR)


State 80

   49 MATH_VAR: REALNEGATIF • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 131
    OPER       go to state 126


State 81

   48 MATH_VAR: REALPOSITIF • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 132
    OPER       go to state 126


State 82

   34 Affectation: identificateur eq EXPR •

    $default  reduce using rule 34 (Affectation)


State 83

   37 EXPR: APPEL_FONC •

    $default  reduce using rule 37 (EXPR)


State 84

   36 EXPR: MATH_VAR •

    $default  reduce using rule 36 (EXPR)


State 85

   35 EXPR: CHAINE_STRING •

    $default  reduce using rule 35 (EXPR)


State 86

   61 CHAINE_STRING: IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 133
    mpins  shift, and go to state 134

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 135


State 87

   72 Appel: identificateur paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 136


State 88

    9 DECLARATIONS1: mcDIMENSION paraO • INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION paraO • INTEGER virgule INTEGER paraF DECLARATIONS2

    INTEGER  shift, and go to state 137


State 89

   18 VALEURS: INTEGER •

    $default  reduce using rule 18 (VALEURS)


State 90

   17 VALEURS: REAL •

    $default  reduce using rule 17 (VALEURS)


State 91

   19 VALEURS: caracter •

    $default  reduce using rule 19 (VALEURS)


State 92

   20 VALEURS: chaine •

    $default  reduce using rule 20 (VALEURS)


State 93

   11 DECLARATIONS1: eq VALEURS • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 138


State 94

    6 DECLARATIONS1: point_virgule DECLARATIONS •

    $default  reduce using rule 6 (DECLARATIONS1)


State 95

    8 DECLARATIONS1: virgule identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 139


State 96

   78 Liste: identificateur paraO INTEGER • virgule INTEGER paraF
   79      | identificateur paraO INTEGER • paraF

    virgule  shift, and go to state 140
    paraF    shift, and go to state 141


State 97

   75 Liste: Liste virgule identificateur •
   76      | Liste virgule identificateur • paraO INTEGER paraF
   77      | Liste virgule identificateur • paraO INTEGER virgule INTEGER paraF

    paraO  shift, and go to state 142

    $default  reduce using rule 75 (Liste)


State 98

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS • INST_S identificateur eq EXPR mcENDR Fonction

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 143


State 99

   67 ES: mcREAD paraO identificateur paraF •

    $default  reduce using rule 67 (ES)


State 100

   70 ES_WRITE_OPTIONAL: virgule • identificateur
   71                  | virgule • identificateur chaine

    identificateur  shift, and go to state 144


State 101

   68 ES: mcWRITE paraO chaine paraF •

    $default  reduce using rule 68 (ES)


State 102

   69 ES: mcWRITE paraO chaine ES_WRITE_OPTIONAL • paraF

    paraF  shift, and go to state 145


State 103

   83 expression: paraO expression • paraF
   84           | expression • point AND point expression
   85           | expression • point OR point expression

    point  shift, and go to state 109
    paraF  shift, and go to state 146


State 104

   87 comparison: operand • point EQ point operand
   88           | operand • point GT point operand
   89           | operand • point GE point operand
   90           | operand • point NE point operand
   91           | operand • point LE point operand
   92           | operand • point LT point operand
   98 operand: paraO operand • paraF

    point  shift, and go to state 111
    paraF  shift, and go to state 147


State 105

   96 operand: identificateur division • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 149


State 106

   97 operand: identificateur etoile • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 150


State 107

   94 operand: identificateur INTEGERPOSITIF •

    $default  reduce using rule 94 (operand)


State 108

   95 operand: identificateur INTEGERNEGATIF •

    $default  reduce using rule 95 (operand)


State 109

   84 expression: expression point • AND point expression
   85           | expression point • OR point expression

    OR   shift, and go to state 151
    AND  shift, and go to state 152


State 110

   81 Condition: mcIF paraO expression paraF • mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO expression paraF • mcTHEN INST_S mcENDIF

    mcTHEN  shift, and go to state 153


State 111

   87 comparison: operand point • EQ point operand
   88           | operand point • GT point operand
   89           | operand point • GE point operand
   90           | operand point • NE point operand
   91           | operand point • LE point operand
   92           | operand point • LT point operand

    GT  shift, and go to state 154
    EQ  shift, and go to state 155
    GE  shift, and go to state 156
    NE  shift, and go to state 157
    LE  shift, and go to state 158
    LT  shift, and go to state 159


State 112

   80 Boucle: mcDOWHILE paraO expression paraF • INST_S mcENDDO

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 160


State 113

   73 Equivalence: PartageMemoire paraO Liste paraF • virgule paraO Liste paraF

    virgule  shift, and go to state 161


State 114

   40 APPEL_FONC: mcCALL identificateur • paraO Liste paraF

    paraO  shift, and go to state 162


State 115

   50 MATH_VAR: paraO MATH_VAR • paraF MATH_VAR1

    paraF  shift, and go to state 163


State 116

  108 OPER: plus •

    $default  reduce using rule 108 (OPER)


State 117

  109 OPER: mpins •

    $default  reduce using rule 109 (OPER)


State 118

  111 OPER: division •

    $default  reduce using rule 111 (OPER)


State 119

  110 OPER: etoile •

    $default  reduce using rule 110 (OPER)


State 120

   42 MATH_VAR: identificateur paraO • INTEGER paraF MATH_VAR1
   43         | identificateur paraO • INTEGER virgule INTEGER paraF MATH_VAR1

    INTEGER  shift, and go to state 164


State 121

   53 MATH_VAR1: INTEGERPOSITIF • OPER MATH_VAR
   57          | INTEGERPOSITIF •

    plus      shift, and go to state 116
    mpins     shift, and go to state 117
    division  shift, and go to state 118
    etoile    shift, and go to state 119

    $default  reduce using rule 57 (MATH_VAR1)

    OPER  go to state 165


State 122

   52 MATH_VAR1: INTEGERNEGATIF • OPER MATH_VAR
   56          | INTEGERNEGATIF •

    plus      shift, and go to state 116
    mpins     shift, and go to state 117
    division  shift, and go to state 118
    etoile    shift, and go to state 119

    $default  reduce using rule 56 (MATH_VAR1)

    OPER  go to state 166


State 123

   54 MATH_VAR1: REALNEGATIF • OPER MATH_VAR
   58          | REALNEGATIF •

    plus      shift, and go to state 116
    mpins     shift, and go to state 117
    division  shift, and go to state 118
    etoile    shift, and go to state 119

    $default  reduce using rule 58 (MATH_VAR1)

    OPER  go to state 167


State 124

   55 MATH_VAR1: REALPOSITIF • OPER MATH_VAR
   59          | REALPOSITIF •

    plus      shift, and go to state 116
    mpins     shift, and go to state 117
    division  shift, and go to state 118
    etoile    shift, and go to state 119

    $default  reduce using rule 59 (MATH_VAR1)

    OPER  go to state 168


State 125

   41 MATH_VAR: identificateur MATH_VAR1 •

    $default  reduce using rule 41 (MATH_VAR)


State 126

   51 MATH_VAR1: OPER • MATH_VAR

    paraO           shift, and go to state 72
    identificateur  shift, and go to state 73
    INTEGER         shift, and go to state 74
    INTEGERPOSITIF  shift, and go to state 75
    INTEGERNEGATIF  shift, and go to state 76
    REAL            shift, and go to state 77
    REALNEGATIF     shift, and go to state 80
    REALPOSITIF     shift, and go to state 81

    MATH_VAR  go to state 169


State 127

   44 MATH_VAR: INTEGER MATH_VAR1 •

    $default  reduce using rule 44 (MATH_VAR)


State 128

   45 MATH_VAR: INTEGERPOSITIF MATH_VAR1 •

    $default  reduce using rule 45 (MATH_VAR)


State 129

   46 MATH_VAR: INTEGERNEGATIF MATH_VAR1 •

    $default  reduce using rule 46 (MATH_VAR)


State 130

   47 MATH_VAR: REAL MATH_VAR1 •

    $default  reduce using rule 47 (MATH_VAR)


State 131

   49 MATH_VAR: REALNEGATIF MATH_VAR1 •

    $default  reduce using rule 49 (MATH_VAR)


State 132

   48 MATH_VAR: REALPOSITIF MATH_VAR1 •

    $default  reduce using rule 48 (MATH_VAR)


State 133

   62 CHAINE_STRING1: plus • IDFI_CHAR CHAINE_STRING1

    caracter  shift, and go to state 78
    chaine    shift, and go to state 79

    IDFI_CHAR  go to state 170


State 134

   63 CHAINE_STRING1: mpins • IDFI_CHAR CHAINE_STRING1

    caracter  shift, and go to state 78
    chaine    shift, and go to state 79

    IDFI_CHAR  go to state 171


State 135

   61 CHAINE_STRING: IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 61 (CHAINE_STRING)


State 136

   72 Appel: identificateur paraO Liste paraF •

    $default  reduce using rule 72 (Appel)


State 137

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER • paraF DECLARATIONS2
   10              | mcDIMENSION paraO INTEGER • virgule INTEGER paraF DECLARATIONS2

    virgule  shift, and go to state 172
    paraF    shift, and go to state 173


State 138

   11 DECLARATIONS1: eq VALEURS DECLARATIONS1 •

    $default  reduce using rule 11 (DECLARATIONS1)


State 139

    8 DECLARATIONS1: virgule identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 174


State 140

   78 Liste: identificateur paraO INTEGER virgule • INTEGER paraF

    INTEGER  shift, and go to state 175


State 141

   79 Liste: identificateur paraO INTEGER paraF •

    $default  reduce using rule 79 (Liste)


State 142

   76 Liste: Liste virgule identificateur paraO • INTEGER paraF
   77      | Liste virgule identificateur paraO • INTEGER virgule INTEGER paraF

    INTEGER  shift, and go to state 176


State 143

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S • identificateur eq EXPR mcENDR Fonction
   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 177

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 144

   70 ES_WRITE_OPTIONAL: virgule identificateur •
   71                  | virgule identificateur • chaine

    chaine  shift, and go to state 178

    $default  reduce using rule 70 (ES_WRITE_OPTIONAL)


State 145

   69 ES: mcWRITE paraO chaine ES_WRITE_OPTIONAL paraF •

    $default  reduce using rule 69 (ES)


State 146

   83 expression: paraO expression paraF •

    $default  reduce using rule 83 (expression)


State 147

   98 operand: paraO operand paraF •

    $default  reduce using rule 98 (operand)


State 148

   98 operand: paraO • operand paraF

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 179


State 149

   96 operand: identificateur division operand •

    $default  reduce using rule 96 (operand)


State 150

   97 operand: identificateur etoile operand •

    $default  reduce using rule 97 (operand)


State 151

   85 expression: expression point OR • point expression

    point  shift, and go to state 180


State 152

   84 expression: expression point AND • point expression

    point  shift, and go to state 181


State 153

   81 Condition: mcIF paraO expression paraF mcTHEN • INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO expression paraF mcTHEN • INST_S mcENDIF

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 182


State 154

   88 comparison: operand point GT • point operand

    point  shift, and go to state 183


State 155

   87 comparison: operand point EQ • point operand

    point  shift, and go to state 184


State 156

   89 comparison: operand point GE • point operand

    point  shift, and go to state 185


State 157

   90 comparison: operand point NE • point operand

    point  shift, and go to state 186


State 158

   91 comparison: operand point LE • point operand

    point  shift, and go to state 187


State 159

   92 comparison: operand point LT • point operand

    point  shift, and go to state 188


State 160

   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition
   80 Boucle: mcDOWHILE paraO expression paraF INST_S • mcENDDO

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcDOWHILE       shift, and go to state 21
    mcENDDO         shift, and go to state 189
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 161

   73 Equivalence: PartageMemoire paraO Liste paraF virgule • paraO Liste paraF

    paraO  shift, and go to state 190


State 162

   40 APPEL_FONC: mcCALL identificateur paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 191


State 163

   50 MATH_VAR: paraO MATH_VAR paraF • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 192
    OPER       go to state 126


State 164

   42 MATH_VAR: identificateur paraO INTEGER • paraF MATH_VAR1
   43         | identificateur paraO INTEGER • virgule INTEGER paraF MATH_VAR1

    virgule  shift, and go to state 193
    paraF    shift, and go to state 194


State 165

   53 MATH_VAR1: INTEGERPOSITIF OPER • MATH_VAR

    paraO           shift, and go to state 72
    identificateur  shift, and go to state 73
    INTEGER         shift, and go to state 74
    INTEGERPOSITIF  shift, and go to state 75
    INTEGERNEGATIF  shift, and go to state 76
    REAL            shift, and go to state 77
    REALNEGATIF     shift, and go to state 80
    REALPOSITIF     shift, and go to state 81

    MATH_VAR  go to state 195


State 166

   52 MATH_VAR1: INTEGERNEGATIF OPER • MATH_VAR

    paraO           shift, and go to state 72
    identificateur  shift, and go to state 73
    INTEGER         shift, and go to state 74
    INTEGERPOSITIF  shift, and go to state 75
    INTEGERNEGATIF  shift, and go to state 76
    REAL            shift, and go to state 77
    REALNEGATIF     shift, and go to state 80
    REALPOSITIF     shift, and go to state 81

    MATH_VAR  go to state 196


State 167

   54 MATH_VAR1: REALNEGATIF OPER • MATH_VAR

    paraO           shift, and go to state 72
    identificateur  shift, and go to state 73
    INTEGER         shift, and go to state 74
    INTEGERPOSITIF  shift, and go to state 75
    INTEGERNEGATIF  shift, and go to state 76
    REAL            shift, and go to state 77
    REALNEGATIF     shift, and go to state 80
    REALPOSITIF     shift, and go to state 81

    MATH_VAR  go to state 197


State 168

   55 MATH_VAR1: REALPOSITIF OPER • MATH_VAR

    paraO           shift, and go to state 72
    identificateur  shift, and go to state 73
    INTEGER         shift, and go to state 74
    INTEGERPOSITIF  shift, and go to state 75
    INTEGERNEGATIF  shift, and go to state 76
    REAL            shift, and go to state 77
    REALNEGATIF     shift, and go to state 80
    REALPOSITIF     shift, and go to state 81

    MATH_VAR  go to state 198


State 169

   51 MATH_VAR1: OPER MATH_VAR •

    $default  reduce using rule 51 (MATH_VAR1)


State 170

   62 CHAINE_STRING1: plus IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 133
    mpins  shift, and go to state 134

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 199


State 171

   63 CHAINE_STRING1: mpins IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 133
    mpins  shift, and go to state 134

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 200


State 172

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule • INTEGER paraF DECLARATIONS2

    INTEGER  shift, and go to state 201


State 173

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER paraF • DECLARATIONS2

    mcDIMENSION    shift, and go to state 202
    point_virgule  shift, and go to state 203
    virgule        shift, and go to state 204

    DECLARATIONS2  go to state 205


State 174

    8 DECLARATIONS1: virgule identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 8 (DECLARATIONS1)


State 175

   78 Liste: identificateur paraO INTEGER virgule INTEGER • paraF

    paraF  shift, and go to state 206


State 176

   76 Liste: Liste virgule identificateur paraO INTEGER • paraF
   77      | Liste virgule identificateur paraO INTEGER • virgule INTEGER paraF

    virgule  shift, and go to state 207
    paraF    shift, and go to state 208


State 177

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur • eq EXPR mcENDR Fonction
   34 Affectation: identificateur • eq EXPR
   72 Appel: identificateur • paraO Liste paraF

    eq     shift, and go to state 209
    paraO  shift, and go to state 41


State 178

   71 ES_WRITE_OPTIONAL: virgule identificateur chaine •

    $default  reduce using rule 71 (ES_WRITE_OPTIONAL)


State 179

   98 operand: paraO operand • paraF

    paraF  shift, and go to state 147


State 180

   85 expression: expression point OR point • expression

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    $default  reduce using rule 93 (comparison)

    expression  go to state 210
    comparison  go to state 65
    operand     go to state 66


State 181

   84 expression: expression point AND point • expression

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    $default  reduce using rule 93 (comparison)

    expression  go to state 211
    comparison  go to state 65
    operand     go to state 66


State 182

   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition
   81 Condition: mcIF paraO expression paraF mcTHEN INST_S • mcELSE INST_S mcENDIF
   82          | mcIF paraO expression paraF mcTHEN INST_S • mcENDIF

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcELSE          shift, and go to state 212
    mcENDIF         shift, and go to state 213
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 183

   88 comparison: operand point GT point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 214


State 184

   87 comparison: operand point EQ point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 215


State 185

   89 comparison: operand point GE point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 216


State 186

   90 comparison: operand point NE point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 217


State 187

   91 comparison: operand point LE point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 218


State 188

   92 comparison: operand point LT point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 148
    identificateur  shift, and go to state 57
    INTEGER         shift, and go to state 58
    INTEGERPOSITIF  shift, and go to state 59
    INTEGERNEGATIF  shift, and go to state 60
    REAL            shift, and go to state 61
    REALNEGATIF     shift, and go to state 62
    REALPOSITIF     shift, and go to state 63

    operand  go to state 219


State 189

   80 Boucle: mcDOWHILE paraO expression paraF INST_S mcENDDO •

    $default  reduce using rule 80 (Boucle)


State 190

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 220


State 191

   40 APPEL_FONC: mcCALL identificateur paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 221


State 192

   50 MATH_VAR: paraO MATH_VAR paraF MATH_VAR1 •

    $default  reduce using rule 50 (MATH_VAR)


State 193

   43 MATH_VAR: identificateur paraO INTEGER virgule • INTEGER paraF MATH_VAR1

    INTEGER  shift, and go to state 222


State 194

   42 MATH_VAR: identificateur paraO INTEGER paraF • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 223
    OPER       go to state 126


State 195

   53 MATH_VAR1: INTEGERPOSITIF OPER MATH_VAR •

    $default  reduce using rule 53 (MATH_VAR1)


State 196

   52 MATH_VAR1: INTEGERNEGATIF OPER MATH_VAR •

    $default  reduce using rule 52 (MATH_VAR1)


State 197

   54 MATH_VAR1: REALNEGATIF OPER MATH_VAR •

    $default  reduce using rule 54 (MATH_VAR1)


State 198

   55 MATH_VAR1: REALPOSITIF OPER MATH_VAR •

    $default  reduce using rule 55 (MATH_VAR1)


State 199

   62 CHAINE_STRING1: plus IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 62 (CHAINE_STRING1)


State 200

   63 CHAINE_STRING1: mpins IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 63 (CHAINE_STRING1)


State 201

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER • paraF DECLARATIONS2

    paraF  shift, and go to state 224


State 202

   15 DECLARATIONS2: mcDIMENSION • paraO INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION • paraO INTEGER virgule INTEGER paraF DECLARATIONS1

    paraO  shift, and go to state 225


State 203

   12 DECLARATIONS2: point_virgule • DECLARATIONS
   13              | point_virgule •

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    $default  reduce using rule 13 (DECLARATIONS2)

    DECLARATIONS  go to state 226
    type          go to state 12


State 204

   14 DECLARATIONS2: virgule • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 227


State 205

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER paraF DECLARATIONS2 •

    $default  reduce using rule 9 (DECLARATIONS1)


State 206

   78 Liste: identificateur paraO INTEGER virgule INTEGER paraF •

    $default  reduce using rule 78 (Liste)


State 207

   77 Liste: Liste virgule identificateur paraO INTEGER virgule • INTEGER paraF

    INTEGER  shift, and go to state 228


State 208

   76 Liste: Liste virgule identificateur paraO INTEGER paraF •

    $default  reduce using rule 76 (Liste)


State 209

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq • EXPR mcENDR Fonction
   34 Affectation: identificateur eq • EXPR

    mcTRUE          shift, and go to state 69
    mcFALSE         shift, and go to state 70
    mcCALL          shift, and go to state 71
    paraO           shift, and go to state 72
    identificateur  shift, and go to state 73
    INTEGER         shift, and go to state 74
    INTEGERPOSITIF  shift, and go to state 75
    INTEGERNEGATIF  shift, and go to state 76
    REAL            shift, and go to state 77
    caracter        shift, and go to state 78
    chaine          shift, and go to state 79
    REALNEGATIF     shift, and go to state 80
    REALPOSITIF     shift, and go to state 81

    EXPR           go to state 229
    APPEL_FONC     go to state 83
    MATH_VAR       go to state 84
    CHAINE_STRING  go to state 85
    IDFI_CHAR      go to state 86


State 210

   84 expression: expression • point AND point expression
   85           | expression • point OR point expression
   85           | expression point OR point expression •

    $default  reduce using rule 85 (expression)


State 211

   84 expression: expression • point AND point expression
   84           | expression point AND point expression •
   85           | expression • point OR point expression

    $default  reduce using rule 84 (expression)


State 212

   81 Condition: mcIF paraO expression paraF mcTHEN INST_S mcELSE • INST_S mcENDIF

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 230


State 213

   82 Condition: mcIF paraO expression paraF mcTHEN INST_S mcENDIF •

    $default  reduce using rule 82 (Condition)


State 214

   88 comparison: operand point GT point operand •

    $default  reduce using rule 88 (comparison)


State 215

   87 comparison: operand point EQ point operand •

    $default  reduce using rule 87 (comparison)


State 216

   89 comparison: operand point GE point operand •

    $default  reduce using rule 89 (comparison)


State 217

   90 comparison: operand point NE point operand •

    $default  reduce using rule 90 (comparison)


State 218

   91 comparison: operand point LE point operand •

    $default  reduce using rule 91 (comparison)


State 219

   92 comparison: operand point LT point operand •

    $default  reduce using rule 92 (comparison)


State 220

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 231


State 221

   40 APPEL_FONC: mcCALL identificateur paraO Liste paraF •

    $default  reduce using rule 40 (APPEL_FONC)


State 222

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER • paraF MATH_VAR1

    paraF  shift, and go to state 232


State 223

   42 MATH_VAR: identificateur paraO INTEGER paraF MATH_VAR1 •

    $default  reduce using rule 42 (MATH_VAR)


State 224

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER paraF • DECLARATIONS2

    mcDIMENSION    shift, and go to state 202
    point_virgule  shift, and go to state 203
    virgule        shift, and go to state 204

    DECLARATIONS2  go to state 233


State 225

   15 DECLARATIONS2: mcDIMENSION paraO • INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION paraO • INTEGER virgule INTEGER paraF DECLARATIONS1

    INTEGER  shift, and go to state 234


State 226

   12 DECLARATIONS2: point_virgule DECLARATIONS •

    $default  reduce using rule 12 (DECLARATIONS2)


State 227

   14 DECLARATIONS2: virgule identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 235


State 228

   77 Liste: Liste virgule identificateur paraO INTEGER virgule INTEGER • paraF

    paraF  shift, and go to state 236


State 229

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR • mcENDR Fonction
   34 Affectation: identificateur eq EXPR •

    mcENDR  shift, and go to state 237

    $default  reduce using rule 34 (Affectation)


State 230

   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition
   81 Condition: mcIF paraO expression paraF mcTHEN INST_S mcELSE INST_S • mcENDIF

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcENDIF         shift, and go to state 238
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 231

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste paraF •

    $default  reduce using rule 73 (Equivalence)


State 232

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER paraF • MATH_VAR1

    plus            shift, and go to state 116
    mpins           shift, and go to state 117
    division        shift, and go to state 118
    etoile          shift, and go to state 119
    INTEGERPOSITIF  shift, and go to state 121
    INTEGERNEGATIF  shift, and go to state 122
    REALNEGATIF     shift, and go to state 123
    REALPOSITIF     shift, and go to state 124

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 239
    OPER       go to state 126


State 233

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS2 •

    $default  reduce using rule 10 (DECLARATIONS1)


State 234

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER • paraF DECLARATIONS1
   16              | mcDIMENSION paraO INTEGER • virgule INTEGER paraF DECLARATIONS1

    virgule  shift, and go to state 240
    paraF    shift, and go to state 241


State 235

   14 DECLARATIONS2: virgule identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 242


State 236

   77 Liste: Liste virgule identificateur paraO INTEGER virgule INTEGER paraF •

    $default  reduce using rule 77 (Liste)


State 237

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR • Fonction

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4
    mcPROGRAM    shift, and go to state 5

    Fonction  go to state 243
    type      go to state 7


State 238

   81 Condition: mcIF paraO expression paraF mcTHEN INST_S mcELSE INST_S mcENDIF •

    $default  reduce using rule 81 (Condition)


State 239

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER paraF MATH_VAR1 •

    $default  reduce using rule 43 (MATH_VAR)


State 240

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule • INTEGER paraF DECLARATIONS1

    INTEGER  shift, and go to state 244


State 241

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER paraF • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 245


State 242

   14 DECLARATIONS2: virgule identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 14 (DECLARATIONS2)


State 243

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction •

    $default  reduce using rule 1 (Fonction)


State 244

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER • paraF DECLARATIONS1

    paraF  shift, and go to state 246


State 245

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER paraF DECLARATIONS1 •

    $default  reduce using rule 15 (DECLARATIONS2)


State 246

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER paraF • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 247


State 247

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS1 •

    $default  reduce using rule 16 (DECLARATIONS2)
