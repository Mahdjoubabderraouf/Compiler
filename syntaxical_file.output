Terminals unused in grammar

    or
    aro
    gui
    commantaire
    UNARY_OPERATOR


State 49 conflicts: 1 shift/reduce
State 110 conflicts: 3 reduce/reduce


Grammar

    0 $accept: Fonction $end

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction
    2         | mcPROGRAM identificateur DECLARATIONS INST_S mcEND

    3 DECLARATIONS: type identificateur caractere1 DECLARATIONS1

    4 caractere1: etoile INTEGER
    5           | ε

    6 DECLARATIONS1: point_virgule DECLARATIONS
    7              | point_virgule
    8              | virgule identificateur caractere1 DECLARATIONS1
    9              | mcDIMENSION paraO INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS2
   11              | eq VALEURS DECLARATIONS1

   12 DECLARATIONS2: point_virgule DECLARATIONS
   13              | point_virgule
   14              | virgule identificateur caractere1 DECLARATIONS1
   15              | mcDIMENSION paraO INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS1

   17 VALEURS: REAL
   18        | INTEGER
   19        | caracter
   20        | chaine

   21 type: mcINTEGER
   22     | mcLOGICAL
   23     | mcREAL
   24     | mcCHARACTER

   25 INST_S: INST_S INSTR point_virgule
   26       | INST_S Condition
   27       | ε

   28 INSTR: Affectation
   29      | ES
   30      | Boucle
   31      | Appel
   32      | Equivalence
   33      | ε

   34 Affectation: identificateur eq EXPR

   35 EXPR: CHAINE_STRING
   36     | MATH_VAR
   37     | APPEL_FONC
   38     | mcFALSE
   39     | mcTRUE

   40 APPEL_FONC: mcCALL identificateur paraO Liste paraF

   41 MATH_VAR: identificateur MATH_VAR1
   42         | identificateur paraO INTEGER paraF MATH_VAR1
   43         | identificateur paraO INTEGER virgule INTEGER paraF MATH_VAR1
   44         | INTEGER MATH_VAR1
   45         | INTEGERPOSITIF MATH_VAR1
   46         | INTEGERNEGATIF MATH_VAR1
   47         | REAL MATH_VAR1
   48         | REALPOSITIF MATH_VAR1
   49         | REALNEGATIF MATH_VAR1
   50         | paraO MATH_VAR paraF MATH_VAR1

   51 MATH_VAR1: OPER MATH_VAR
   52          | INTEGERNEGATIF OPER MATH_VAR
   53          | INTEGERPOSITIF OPER MATH_VAR
   54          | REALNEGATIF OPER MATH_VAR
   55          | REALPOSITIF OPER MATH_VAR
   56          | INTEGERNEGATIF
   57          | INTEGERPOSITIF
   58          | REALNEGATIF
   59          | REALPOSITIF
   60          | ε

   61 CHAINE_STRING: IDFI_CHAR CHAINE_STRING1

   62 CHAINE_STRING1: plus IDFI_CHAR CHAINE_STRING1
   63               | mpins IDFI_CHAR CHAINE_STRING1
   64               | ε

   65 IDFI_CHAR: chaine
   66          | caracter

   67 ES: mcREAD paraO identificateur paraF
   68   | mcWRITE paraO chaine paraF
   69   | mcWRITE paraO chaine ES_WRITE_OPTIONAL paraF

   70 ES_WRITE_OPTIONAL: virgule identificateur
   71                  | virgule identificateur chaine

   72 Appel: identificateur paraO Liste paraF

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste paraF

   74 Liste: identificateur
   75      | Liste virgule identificateur
   76      | Liste virgule identificateur paraO INTEGER paraF
   77      | Liste virgule identificateur paraO INTEGER virgule INTEGER paraF
   78      | identificateur paraO INTEGER virgule INTEGER paraF
   79      | identificateur paraO INTEGER paraF

   80 Boucle: mcDOWHILE paraO expression paraF INST_S mcENDDO

   81 Condition: mcIF expression mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF expression mcTHEN INST_S mcENDIF

   83 expression: paraO expression paraF
   84           | expression point AND point expression
   85           | expression point OR point expression
   86           | comparison

   87 comparison: operand point EQ point operand
   88           | operand point GT point operand
   89           | operand point GE point operand
   90           | operand point NE point operand
   91           | operand point LE point operand
   92           | operand point LT point operand
   93           | operand

   94 operand: identificateur INTEGERPOSITIF
   95        | identificateur INTEGERNEGATIF
   96        | identificateur division operand
   97        | identificateur etoile operand
   98        | paraO expression paraF
   99        | identificateur
  100        | INTEGER
  101        | INTEGERPOSITIF
  102        | INTEGERNEGATIF
  103        | REAL
  104        | REALPOSITIF
  105        | REALNEGATIF
  106        | mcTRUE
  107        | mcFALSE

  108 OPER: plus
  109     | mpins
  110     | etoile
  111     | division


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    mcTRUE (258) 39 106
    mcFALSE (259) 38 107
    mcINTEGER (260) 21
    mcREAL (261) 23
    mcCHARACTER (262) 24
    mcLOGICAL (263) 22
    mcREAD (264) 67
    mcWRITE (265) 68 69
    mcDIMENSION (266) 9 10 15 16
    mcPROGRAM (267) 2
    mcEND (268) 2
    mcROUTINE (269) 1
    mcENDR (270) 1
    mcCALL (271) 40
    mcIF (272) 81 82
    mcTHEN (273) 81 82
    mcELSE (274) 81
    mcENDIF (275) 81 82
    mcDOWHILE (276) 80
    mcENDDO (277) 80
    PartageMemoire (278) 73
    OR (279) 85
    AND (280) 84
    GT (281) 88
    EQ (282) 87
    GE (283) 89
    NE (284) 90
    LE (285) 91
    LT (286) 92
    eq (287) 1 11 34
    point_virgule (288) 6 7 12 13 25
    point (289) 84 85 87 88 89 90 91 92
    plus (290) 62 108
    mpins (291) 63 109
    division (292) 96 111
    or (293)
    aro (294)
    etoile (295) 4 97 110
    virgule (296) 8 10 14 16 43 70 71 73 75 76 77 78
    gui (297)
    paraO (298) 1 9 10 15 16 40 42 43 50 67 68 69 72 73 76 77 78 79 80 83 98
    paraF (299) 1 9 10 15 16 40 42 43 50 67 68 69 72 73 76 77 78 79 80 83 98
    identificateur (300) 1 2 3 8 14 34 40 41 42 43 67 70 71 72 74 75 76 77 78 79 94 95 96 97 99
    INTEGER (301) 4 9 10 15 16 18 42 43 44 76 77 78 79 100
    INTEGERPOSITIF (302) 45 53 57 94 101
    INTEGERNEGATIF (303) 46 52 56 95 102
    REAL (304) 17 47 103
    caracter (305) 19 66
    chaine (306) 20 65 68 69 71
    commantaire (307)
    REALNEGATIF (308) 49 54 58 105
    REALPOSITIF (309) 48 55 59 104
    UNARY_OPERATOR (310)


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    Fonction (57)
        on left: 1 2
        on right: 0 1
    DECLARATIONS (58)
        on left: 3
        on right: 1 2 6 12
    caractere1 (59)
        on left: 4 5
        on right: 3 8 14
    DECLARATIONS1 (60)
        on left: 6 7 8 9 10 11
        on right: 3 8 11 14 15 16
    DECLARATIONS2 (61)
        on left: 12 13 14 15 16
        on right: 9 10
    VALEURS (62)
        on left: 17 18 19 20
        on right: 11
    type (63)
        on left: 21 22 23 24
        on right: 1 3
    INST_S (64)
        on left: 25 26 27
        on right: 1 2 25 26 80 81 82
    INSTR (65)
        on left: 28 29 30 31 32 33
        on right: 25
    Affectation (66)
        on left: 34
        on right: 28
    EXPR (67)
        on left: 35 36 37 38 39
        on right: 1 34
    APPEL_FONC (68)
        on left: 40
        on right: 37
    MATH_VAR (69)
        on left: 41 42 43 44 45 46 47 48 49 50
        on right: 36 50 51 52 53 54 55
    MATH_VAR1 (70)
        on left: 51 52 53 54 55 56 57 58 59 60
        on right: 41 42 43 44 45 46 47 48 49 50
    CHAINE_STRING (71)
        on left: 61
        on right: 35
    CHAINE_STRING1 (72)
        on left: 62 63 64
        on right: 61 62 63
    IDFI_CHAR (73)
        on left: 65 66
        on right: 61 62 63
    ES (74)
        on left: 67 68 69
        on right: 29
    ES_WRITE_OPTIONAL (75)
        on left: 70 71
        on right: 69
    Appel (76)
        on left: 72
        on right: 31
    Equivalence (77)
        on left: 73
        on right: 32
    Liste (78)
        on left: 74 75 76 77 78 79
        on right: 1 40 72 73 75 76 77
    Boucle (79)
        on left: 80
        on right: 30
    Condition (80)
        on left: 81 82
        on right: 26
    expression (81)
        on left: 83 84 85 86
        on right: 80 81 82 83 84 85 98
    comparison (82)
        on left: 87 88 89 90 91 92 93
        on right: 86
    operand (83)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107
        on right: 87 88 89 90 91 92 93 96 97
    OPER (84)
        on left: 108 109 110 111
        on right: 51 52 53 54 55


State 0

    0 $accept: • Fonction $end

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4
    mcPROGRAM    shift, and go to state 5

    Fonction  go to state 6
    type      go to state 7


State 1

   21 type: mcINTEGER •

    $default  reduce using rule 21 (type)


State 2

   23 type: mcREAL •

    $default  reduce using rule 23 (type)


State 3

   24 type: mcCHARACTER •

    $default  reduce using rule 24 (type)


State 4

   22 type: mcLOGICAL •

    $default  reduce using rule 22 (type)


State 5

    2 Fonction: mcPROGRAM • identificateur DECLARATIONS INST_S mcEND

    identificateur  shift, and go to state 8


State 6

    0 $accept: Fonction • $end

    $end  shift, and go to state 9


State 7

    1 Fonction: type • mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    mcROUTINE  shift, and go to state 10


State 8

    2 Fonction: mcPROGRAM identificateur • DECLARATIONS INST_S mcEND

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    DECLARATIONS  go to state 11
    type          go to state 12


State 9

    0 $accept: Fonction $end •

    $default  accept


State 10

    1 Fonction: type mcROUTINE • identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    identificateur  shift, and go to state 13


State 11

    2 Fonction: mcPROGRAM identificateur DECLARATIONS • INST_S mcEND

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 14


State 12

    3 DECLARATIONS: type • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 15


State 13

    1 Fonction: type mcROUTINE identificateur • paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    paraO  shift, and go to state 16


State 14

    2 Fonction: mcPROGRAM identificateur DECLARATIONS INST_S • mcEND
   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcEND           shift, and go to state 19
    mcIF            shift, and go to state 20
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 15

    3 DECLARATIONS: type identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 32


State 16

    1 Fonction: type mcROUTINE identificateur paraO • Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    identificateur  shift, and go to state 33

    Liste  go to state 34


State 17

   67 ES: mcREAD • paraO identificateur paraF

    paraO  shift, and go to state 35


State 18

   68 ES: mcWRITE • paraO chaine paraF
   69   | mcWRITE • paraO chaine ES_WRITE_OPTIONAL paraF

    paraO  shift, and go to state 36


State 19

    2 Fonction: mcPROGRAM identificateur DECLARATIONS INST_S mcEND •

    $default  reduce using rule 2 (Fonction)


State 20

   81 Condition: mcIF • expression mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF • expression mcTHEN INST_S mcENDIF

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 39
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    expression  go to state 47
    comparison  go to state 48
    operand     go to state 49


State 21

   80 Boucle: mcDOWHILE • paraO expression paraF INST_S mcENDDO

    paraO  shift, and go to state 50


State 22

   73 Equivalence: PartageMemoire • paraO Liste paraF virgule paraO Liste paraF

    paraO  shift, and go to state 51


State 23

   34 Affectation: identificateur • eq EXPR
   72 Appel: identificateur • paraO Liste paraF

    eq     shift, and go to state 52
    paraO  shift, and go to state 53


State 24

   25 INST_S: INST_S INSTR • point_virgule

    point_virgule  shift, and go to state 54


State 25

   28 INSTR: Affectation •

    $default  reduce using rule 28 (INSTR)


State 26

   29 INSTR: ES •

    $default  reduce using rule 29 (INSTR)


State 27

   31 INSTR: Appel •

    $default  reduce using rule 31 (INSTR)


State 28

   32 INSTR: Equivalence •

    $default  reduce using rule 32 (INSTR)


State 29

   30 INSTR: Boucle •

    $default  reduce using rule 30 (INSTR)


State 30

   26 INST_S: INST_S Condition •

    $default  reduce using rule 26 (INST_S)


State 31

    4 caractere1: etoile • INTEGER

    INTEGER  shift, and go to state 55


State 32

    3 DECLARATIONS: type identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 56
    eq             shift, and go to state 57
    point_virgule  shift, and go to state 58
    virgule        shift, and go to state 59

    DECLARATIONS1  go to state 60


State 33

   74 Liste: identificateur •
   78      | identificateur • paraO INTEGER virgule INTEGER paraF
   79      | identificateur • paraO INTEGER paraF

    paraO  shift, and go to state 61

    $default  reduce using rule 74 (Liste)


State 34

    1 Fonction: type mcROUTINE identificateur paraO Liste • paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 62
    paraF    shift, and go to state 63


State 35

   67 ES: mcREAD paraO • identificateur paraF

    identificateur  shift, and go to state 64


State 36

   68 ES: mcWRITE paraO • chaine paraF
   69   | mcWRITE paraO • chaine ES_WRITE_OPTIONAL paraF

    chaine  shift, and go to state 65


State 37

  106 operand: mcTRUE •

    $default  reduce using rule 106 (operand)


State 38

  107 operand: mcFALSE •

    $default  reduce using rule 107 (operand)


State 39

   83 expression: paraO • expression paraF
   98 operand: paraO • expression paraF

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 39
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    expression  go to state 66
    comparison  go to state 48
    operand     go to state 49


State 40

   94 operand: identificateur • INTEGERPOSITIF
   95        | identificateur • INTEGERNEGATIF
   96        | identificateur • division operand
   97        | identificateur • etoile operand
   99        | identificateur •

    division        shift, and go to state 67
    etoile          shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70

    $default  reduce using rule 99 (operand)


State 41

  100 operand: INTEGER •

    $default  reduce using rule 100 (operand)


State 42

  101 operand: INTEGERPOSITIF •

    $default  reduce using rule 101 (operand)


State 43

  102 operand: INTEGERNEGATIF •

    $default  reduce using rule 102 (operand)


State 44

  103 operand: REAL •

    $default  reduce using rule 103 (operand)


State 45

  105 operand: REALNEGATIF •

    $default  reduce using rule 105 (operand)


State 46

  104 operand: REALPOSITIF •

    $default  reduce using rule 104 (operand)


State 47

   81 Condition: mcIF expression • mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF expression • mcTHEN INST_S mcENDIF
   84 expression: expression • point AND point expression
   85           | expression • point OR point expression

    mcTHEN  shift, and go to state 71
    point   shift, and go to state 72


State 48

   86 expression: comparison •

    $default  reduce using rule 86 (expression)


State 49

   87 comparison: operand • point EQ point operand
   88           | operand • point GT point operand
   89           | operand • point GE point operand
   90           | operand • point NE point operand
   91           | operand • point LE point operand
   92           | operand • point LT point operand
   93           | operand •

    point  shift, and go to state 73

    point     [reduce using rule 93 (comparison)]
    $default  reduce using rule 93 (comparison)


State 50

   80 Boucle: mcDOWHILE paraO • expression paraF INST_S mcENDDO

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 39
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    expression  go to state 74
    comparison  go to state 48
    operand     go to state 49


State 51

   73 Equivalence: PartageMemoire paraO • Liste paraF virgule paraO Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 75


State 52

   34 Affectation: identificateur eq • EXPR

    mcTRUE          shift, and go to state 76
    mcFALSE         shift, and go to state 77
    mcCALL          shift, and go to state 78
    paraO           shift, and go to state 79
    identificateur  shift, and go to state 80
    INTEGER         shift, and go to state 81
    INTEGERPOSITIF  shift, and go to state 82
    INTEGERNEGATIF  shift, and go to state 83
    REAL            shift, and go to state 84
    caracter        shift, and go to state 85
    chaine          shift, and go to state 86
    REALNEGATIF     shift, and go to state 87
    REALPOSITIF     shift, and go to state 88

    EXPR           go to state 89
    APPEL_FONC     go to state 90
    MATH_VAR       go to state 91
    CHAINE_STRING  go to state 92
    IDFI_CHAR      go to state 93


State 53

   72 Appel: identificateur paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 94


State 54

   25 INST_S: INST_S INSTR point_virgule •

    $default  reduce using rule 25 (INST_S)


State 55

    4 caractere1: etoile INTEGER •

    $default  reduce using rule 4 (caractere1)


State 56

    9 DECLARATIONS1: mcDIMENSION • paraO INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION • paraO INTEGER virgule INTEGER paraF DECLARATIONS2

    paraO  shift, and go to state 95


State 57

   11 DECLARATIONS1: eq • VALEURS DECLARATIONS1

    INTEGER   shift, and go to state 96
    REAL      shift, and go to state 97
    caracter  shift, and go to state 98
    chaine    shift, and go to state 99

    VALEURS  go to state 100


State 58

    6 DECLARATIONS1: point_virgule • DECLARATIONS
    7              | point_virgule •

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    $default  reduce using rule 7 (DECLARATIONS1)

    DECLARATIONS  go to state 101
    type          go to state 12


State 59

    8 DECLARATIONS1: virgule • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 102


State 60

    3 DECLARATIONS: type identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 3 (DECLARATIONS)


State 61

   78 Liste: identificateur paraO • INTEGER virgule INTEGER paraF
   79      | identificateur paraO • INTEGER paraF

    INTEGER  shift, and go to state 103


State 62

   75 Liste: Liste virgule • identificateur
   76      | Liste virgule • identificateur paraO INTEGER paraF
   77      | Liste virgule • identificateur paraO INTEGER virgule INTEGER paraF

    identificateur  shift, and go to state 104


State 63

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF • DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    DECLARATIONS  go to state 105
    type          go to state 12


State 64

   67 ES: mcREAD paraO identificateur • paraF

    paraF  shift, and go to state 106


State 65

   68 ES: mcWRITE paraO chaine • paraF
   69   | mcWRITE paraO chaine • ES_WRITE_OPTIONAL paraF

    virgule  shift, and go to state 107
    paraF    shift, and go to state 108

    ES_WRITE_OPTIONAL  go to state 109


State 66

   83 expression: paraO expression • paraF
   84           | expression • point AND point expression
   85           | expression • point OR point expression
   98 operand: paraO expression • paraF

    point  shift, and go to state 72
    paraF  shift, and go to state 110


State 67

   96 operand: identificateur division • operand

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 111
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    operand  go to state 112


State 68

   97 operand: identificateur etoile • operand

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 111
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    operand  go to state 113


State 69

   94 operand: identificateur INTEGERPOSITIF •

    $default  reduce using rule 94 (operand)


State 70

   95 operand: identificateur INTEGERNEGATIF •

    $default  reduce using rule 95 (operand)


State 71

   81 Condition: mcIF expression mcTHEN • INST_S mcELSE INST_S mcENDIF
   82          | mcIF expression mcTHEN • INST_S mcENDIF

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 114


State 72

   84 expression: expression point • AND point expression
   85           | expression point • OR point expression

    OR   shift, and go to state 115
    AND  shift, and go to state 116


State 73

   87 comparison: operand point • EQ point operand
   88           | operand point • GT point operand
   89           | operand point • GE point operand
   90           | operand point • NE point operand
   91           | operand point • LE point operand
   92           | operand point • LT point operand

    GT  shift, and go to state 117
    EQ  shift, and go to state 118
    GE  shift, and go to state 119
    NE  shift, and go to state 120
    LE  shift, and go to state 121
    LT  shift, and go to state 122


State 74

   80 Boucle: mcDOWHILE paraO expression • paraF INST_S mcENDDO
   84 expression: expression • point AND point expression
   85           | expression • point OR point expression

    point  shift, and go to state 72
    paraF  shift, and go to state 123


State 75

   73 Equivalence: PartageMemoire paraO Liste • paraF virgule paraO Liste paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 62
    paraF    shift, and go to state 124


State 76

   39 EXPR: mcTRUE •

    $default  reduce using rule 39 (EXPR)


State 77

   38 EXPR: mcFALSE •

    $default  reduce using rule 38 (EXPR)


State 78

   40 APPEL_FONC: mcCALL • identificateur paraO Liste paraF

    identificateur  shift, and go to state 125


State 79

   50 MATH_VAR: paraO • MATH_VAR paraF MATH_VAR1

    paraO           shift, and go to state 79
    identificateur  shift, and go to state 80
    INTEGER         shift, and go to state 81
    INTEGERPOSITIF  shift, and go to state 82
    INTEGERNEGATIF  shift, and go to state 83
    REAL            shift, and go to state 84
    REALNEGATIF     shift, and go to state 87
    REALPOSITIF     shift, and go to state 88

    MATH_VAR  go to state 126


State 80

   41 MATH_VAR: identificateur • MATH_VAR1
   42         | identificateur • paraO INTEGER paraF MATH_VAR1
   43         | identificateur • paraO INTEGER virgule INTEGER paraF MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    paraO           shift, and go to state 131
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 136
    OPER       go to state 137


State 81

   44 MATH_VAR: INTEGER • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 138
    OPER       go to state 137


State 82

   45 MATH_VAR: INTEGERPOSITIF • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 139
    OPER       go to state 137


State 83

   46 MATH_VAR: INTEGERNEGATIF • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 140
    OPER       go to state 137


State 84

   47 MATH_VAR: REAL • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 141
    OPER       go to state 137


State 85

   66 IDFI_CHAR: caracter •

    $default  reduce using rule 66 (IDFI_CHAR)


State 86

   65 IDFI_CHAR: chaine •

    $default  reduce using rule 65 (IDFI_CHAR)


State 87

   49 MATH_VAR: REALNEGATIF • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 142
    OPER       go to state 137


State 88

   48 MATH_VAR: REALPOSITIF • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 143
    OPER       go to state 137


State 89

   34 Affectation: identificateur eq EXPR •

    $default  reduce using rule 34 (Affectation)


State 90

   37 EXPR: APPEL_FONC •

    $default  reduce using rule 37 (EXPR)


State 91

   36 EXPR: MATH_VAR •

    $default  reduce using rule 36 (EXPR)


State 92

   35 EXPR: CHAINE_STRING •

    $default  reduce using rule 35 (EXPR)


State 93

   61 CHAINE_STRING: IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 144
    mpins  shift, and go to state 145

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 146


State 94

   72 Appel: identificateur paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 62
    paraF    shift, and go to state 147


State 95

    9 DECLARATIONS1: mcDIMENSION paraO • INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION paraO • INTEGER virgule INTEGER paraF DECLARATIONS2

    INTEGER  shift, and go to state 148


State 96

   18 VALEURS: INTEGER •

    $default  reduce using rule 18 (VALEURS)


State 97

   17 VALEURS: REAL •

    $default  reduce using rule 17 (VALEURS)


State 98

   19 VALEURS: caracter •

    $default  reduce using rule 19 (VALEURS)


State 99

   20 VALEURS: chaine •

    $default  reduce using rule 20 (VALEURS)


State 100

   11 DECLARATIONS1: eq VALEURS • DECLARATIONS1

    mcDIMENSION    shift, and go to state 56
    eq             shift, and go to state 57
    point_virgule  shift, and go to state 58
    virgule        shift, and go to state 59

    DECLARATIONS1  go to state 149


State 101

    6 DECLARATIONS1: point_virgule DECLARATIONS •

    $default  reduce using rule 6 (DECLARATIONS1)


State 102

    8 DECLARATIONS1: virgule identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 150


State 103

   78 Liste: identificateur paraO INTEGER • virgule INTEGER paraF
   79      | identificateur paraO INTEGER • paraF

    virgule  shift, and go to state 151
    paraF    shift, and go to state 152


State 104

   75 Liste: Liste virgule identificateur •
   76      | Liste virgule identificateur • paraO INTEGER paraF
   77      | Liste virgule identificateur • paraO INTEGER virgule INTEGER paraF

    paraO  shift, and go to state 153

    $default  reduce using rule 75 (Liste)


State 105

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS • INST_S identificateur eq EXPR mcENDR Fonction

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 154


State 106

   67 ES: mcREAD paraO identificateur paraF •

    $default  reduce using rule 67 (ES)


State 107

   70 ES_WRITE_OPTIONAL: virgule • identificateur
   71                  | virgule • identificateur chaine

    identificateur  shift, and go to state 155


State 108

   68 ES: mcWRITE paraO chaine paraF •

    $default  reduce using rule 68 (ES)


State 109

   69 ES: mcWRITE paraO chaine ES_WRITE_OPTIONAL • paraF

    paraF  shift, and go to state 156


State 110

   83 expression: paraO expression paraF •
   98 operand: paraO expression paraF •

    mcTHEN    reduce using rule 83 (expression)
    mcTHEN    [reduce using rule 98 (operand)]
    point     reduce using rule 83 (expression)
    point     [reduce using rule 98 (operand)]
    paraF     reduce using rule 83 (expression)
    paraF     [reduce using rule 98 (operand)]
    $default  reduce using rule 83 (expression)


State 111

   98 operand: paraO • expression paraF

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 39
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    expression  go to state 157
    comparison  go to state 48
    operand     go to state 49


State 112

   96 operand: identificateur division operand •

    $default  reduce using rule 96 (operand)


State 113

   97 operand: identificateur etoile operand •

    $default  reduce using rule 97 (operand)


State 114

   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition
   81 Condition: mcIF expression mcTHEN INST_S • mcELSE INST_S mcENDIF
   82          | mcIF expression mcTHEN INST_S • mcENDIF

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcELSE          shift, and go to state 158
    mcENDIF         shift, and go to state 159
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 115

   85 expression: expression point OR • point expression

    point  shift, and go to state 160


State 116

   84 expression: expression point AND • point expression

    point  shift, and go to state 161


State 117

   88 comparison: operand point GT • point operand

    point  shift, and go to state 162


State 118

   87 comparison: operand point EQ • point operand

    point  shift, and go to state 163


State 119

   89 comparison: operand point GE • point operand

    point  shift, and go to state 164


State 120

   90 comparison: operand point NE • point operand

    point  shift, and go to state 165


State 121

   91 comparison: operand point LE • point operand

    point  shift, and go to state 166


State 122

   92 comparison: operand point LT • point operand

    point  shift, and go to state 167


State 123

   80 Boucle: mcDOWHILE paraO expression paraF • INST_S mcENDDO

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 168


State 124

   73 Equivalence: PartageMemoire paraO Liste paraF • virgule paraO Liste paraF

    virgule  shift, and go to state 169


State 125

   40 APPEL_FONC: mcCALL identificateur • paraO Liste paraF

    paraO  shift, and go to state 170


State 126

   50 MATH_VAR: paraO MATH_VAR • paraF MATH_VAR1

    paraF  shift, and go to state 171


State 127

  108 OPER: plus •

    $default  reduce using rule 108 (OPER)


State 128

  109 OPER: mpins •

    $default  reduce using rule 109 (OPER)


State 129

  111 OPER: division •

    $default  reduce using rule 111 (OPER)


State 130

  110 OPER: etoile •

    $default  reduce using rule 110 (OPER)


State 131

   42 MATH_VAR: identificateur paraO • INTEGER paraF MATH_VAR1
   43         | identificateur paraO • INTEGER virgule INTEGER paraF MATH_VAR1

    INTEGER  shift, and go to state 172


State 132

   53 MATH_VAR1: INTEGERPOSITIF • OPER MATH_VAR
   57          | INTEGERPOSITIF •

    plus      shift, and go to state 127
    mpins     shift, and go to state 128
    division  shift, and go to state 129
    etoile    shift, and go to state 130

    $default  reduce using rule 57 (MATH_VAR1)

    OPER  go to state 173


State 133

   52 MATH_VAR1: INTEGERNEGATIF • OPER MATH_VAR
   56          | INTEGERNEGATIF •

    plus      shift, and go to state 127
    mpins     shift, and go to state 128
    division  shift, and go to state 129
    etoile    shift, and go to state 130

    $default  reduce using rule 56 (MATH_VAR1)

    OPER  go to state 174


State 134

   54 MATH_VAR1: REALNEGATIF • OPER MATH_VAR
   58          | REALNEGATIF •

    plus      shift, and go to state 127
    mpins     shift, and go to state 128
    division  shift, and go to state 129
    etoile    shift, and go to state 130

    $default  reduce using rule 58 (MATH_VAR1)

    OPER  go to state 175


State 135

   55 MATH_VAR1: REALPOSITIF • OPER MATH_VAR
   59          | REALPOSITIF •

    plus      shift, and go to state 127
    mpins     shift, and go to state 128
    division  shift, and go to state 129
    etoile    shift, and go to state 130

    $default  reduce using rule 59 (MATH_VAR1)

    OPER  go to state 176


State 136

   41 MATH_VAR: identificateur MATH_VAR1 •

    $default  reduce using rule 41 (MATH_VAR)


State 137

   51 MATH_VAR1: OPER • MATH_VAR

    paraO           shift, and go to state 79
    identificateur  shift, and go to state 80
    INTEGER         shift, and go to state 81
    INTEGERPOSITIF  shift, and go to state 82
    INTEGERNEGATIF  shift, and go to state 83
    REAL            shift, and go to state 84
    REALNEGATIF     shift, and go to state 87
    REALPOSITIF     shift, and go to state 88

    MATH_VAR  go to state 177


State 138

   44 MATH_VAR: INTEGER MATH_VAR1 •

    $default  reduce using rule 44 (MATH_VAR)


State 139

   45 MATH_VAR: INTEGERPOSITIF MATH_VAR1 •

    $default  reduce using rule 45 (MATH_VAR)


State 140

   46 MATH_VAR: INTEGERNEGATIF MATH_VAR1 •

    $default  reduce using rule 46 (MATH_VAR)


State 141

   47 MATH_VAR: REAL MATH_VAR1 •

    $default  reduce using rule 47 (MATH_VAR)


State 142

   49 MATH_VAR: REALNEGATIF MATH_VAR1 •

    $default  reduce using rule 49 (MATH_VAR)


State 143

   48 MATH_VAR: REALPOSITIF MATH_VAR1 •

    $default  reduce using rule 48 (MATH_VAR)


State 144

   62 CHAINE_STRING1: plus • IDFI_CHAR CHAINE_STRING1

    caracter  shift, and go to state 85
    chaine    shift, and go to state 86

    IDFI_CHAR  go to state 178


State 145

   63 CHAINE_STRING1: mpins • IDFI_CHAR CHAINE_STRING1

    caracter  shift, and go to state 85
    chaine    shift, and go to state 86

    IDFI_CHAR  go to state 179


State 146

   61 CHAINE_STRING: IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 61 (CHAINE_STRING)


State 147

   72 Appel: identificateur paraO Liste paraF •

    $default  reduce using rule 72 (Appel)


State 148

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER • paraF DECLARATIONS2
   10              | mcDIMENSION paraO INTEGER • virgule INTEGER paraF DECLARATIONS2

    virgule  shift, and go to state 180
    paraF    shift, and go to state 181


State 149

   11 DECLARATIONS1: eq VALEURS DECLARATIONS1 •

    $default  reduce using rule 11 (DECLARATIONS1)


State 150

    8 DECLARATIONS1: virgule identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 56
    eq             shift, and go to state 57
    point_virgule  shift, and go to state 58
    virgule        shift, and go to state 59

    DECLARATIONS1  go to state 182


State 151

   78 Liste: identificateur paraO INTEGER virgule • INTEGER paraF

    INTEGER  shift, and go to state 183


State 152

   79 Liste: identificateur paraO INTEGER paraF •

    $default  reduce using rule 79 (Liste)


State 153

   76 Liste: Liste virgule identificateur paraO • INTEGER paraF
   77      | Liste virgule identificateur paraO • INTEGER virgule INTEGER paraF

    INTEGER  shift, and go to state 184


State 154

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S • identificateur eq EXPR mcENDR Fonction
   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 185

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 155

   70 ES_WRITE_OPTIONAL: virgule identificateur •
   71                  | virgule identificateur • chaine

    chaine  shift, and go to state 186

    $default  reduce using rule 70 (ES_WRITE_OPTIONAL)


State 156

   69 ES: mcWRITE paraO chaine ES_WRITE_OPTIONAL paraF •

    $default  reduce using rule 69 (ES)


State 157

   84 expression: expression • point AND point expression
   85           | expression • point OR point expression
   98 operand: paraO expression • paraF

    point  shift, and go to state 72
    paraF  shift, and go to state 187


State 158

   81 Condition: mcIF expression mcTHEN INST_S mcELSE • INST_S mcENDIF

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 188


State 159

   82 Condition: mcIF expression mcTHEN INST_S mcENDIF •

    $default  reduce using rule 82 (Condition)


State 160

   85 expression: expression point OR point • expression

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 39
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    expression  go to state 189
    comparison  go to state 48
    operand     go to state 49


State 161

   84 expression: expression point AND point • expression

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 39
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    expression  go to state 190
    comparison  go to state 48
    operand     go to state 49


State 162

   88 comparison: operand point GT point • operand

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 111
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    operand  go to state 191


State 163

   87 comparison: operand point EQ point • operand

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 111
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    operand  go to state 192


State 164

   89 comparison: operand point GE point • operand

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 111
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    operand  go to state 193


State 165

   90 comparison: operand point NE point • operand

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 111
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    operand  go to state 194


State 166

   91 comparison: operand point LE point • operand

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 111
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    operand  go to state 195


State 167

   92 comparison: operand point LT point • operand

    mcTRUE          shift, and go to state 37
    mcFALSE         shift, and go to state 38
    paraO           shift, and go to state 111
    identificateur  shift, and go to state 40
    INTEGER         shift, and go to state 41
    INTEGERPOSITIF  shift, and go to state 42
    INTEGERNEGATIF  shift, and go to state 43
    REAL            shift, and go to state 44
    REALNEGATIF     shift, and go to state 45
    REALPOSITIF     shift, and go to state 46

    operand  go to state 196


State 168

   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition
   80 Boucle: mcDOWHILE paraO expression paraF INST_S • mcENDDO

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcDOWHILE       shift, and go to state 21
    mcENDDO         shift, and go to state 197
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 169

   73 Equivalence: PartageMemoire paraO Liste paraF virgule • paraO Liste paraF

    paraO  shift, and go to state 198


State 170

   40 APPEL_FONC: mcCALL identificateur paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 199


State 171

   50 MATH_VAR: paraO MATH_VAR paraF • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 200
    OPER       go to state 137


State 172

   42 MATH_VAR: identificateur paraO INTEGER • paraF MATH_VAR1
   43         | identificateur paraO INTEGER • virgule INTEGER paraF MATH_VAR1

    virgule  shift, and go to state 201
    paraF    shift, and go to state 202


State 173

   53 MATH_VAR1: INTEGERPOSITIF OPER • MATH_VAR

    paraO           shift, and go to state 79
    identificateur  shift, and go to state 80
    INTEGER         shift, and go to state 81
    INTEGERPOSITIF  shift, and go to state 82
    INTEGERNEGATIF  shift, and go to state 83
    REAL            shift, and go to state 84
    REALNEGATIF     shift, and go to state 87
    REALPOSITIF     shift, and go to state 88

    MATH_VAR  go to state 203


State 174

   52 MATH_VAR1: INTEGERNEGATIF OPER • MATH_VAR

    paraO           shift, and go to state 79
    identificateur  shift, and go to state 80
    INTEGER         shift, and go to state 81
    INTEGERPOSITIF  shift, and go to state 82
    INTEGERNEGATIF  shift, and go to state 83
    REAL            shift, and go to state 84
    REALNEGATIF     shift, and go to state 87
    REALPOSITIF     shift, and go to state 88

    MATH_VAR  go to state 204


State 175

   54 MATH_VAR1: REALNEGATIF OPER • MATH_VAR

    paraO           shift, and go to state 79
    identificateur  shift, and go to state 80
    INTEGER         shift, and go to state 81
    INTEGERPOSITIF  shift, and go to state 82
    INTEGERNEGATIF  shift, and go to state 83
    REAL            shift, and go to state 84
    REALNEGATIF     shift, and go to state 87
    REALPOSITIF     shift, and go to state 88

    MATH_VAR  go to state 205


State 176

   55 MATH_VAR1: REALPOSITIF OPER • MATH_VAR

    paraO           shift, and go to state 79
    identificateur  shift, and go to state 80
    INTEGER         shift, and go to state 81
    INTEGERPOSITIF  shift, and go to state 82
    INTEGERNEGATIF  shift, and go to state 83
    REAL            shift, and go to state 84
    REALNEGATIF     shift, and go to state 87
    REALPOSITIF     shift, and go to state 88

    MATH_VAR  go to state 206


State 177

   51 MATH_VAR1: OPER MATH_VAR •

    $default  reduce using rule 51 (MATH_VAR1)


State 178

   62 CHAINE_STRING1: plus IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 144
    mpins  shift, and go to state 145

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 207


State 179

   63 CHAINE_STRING1: mpins IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 144
    mpins  shift, and go to state 145

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 208


State 180

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule • INTEGER paraF DECLARATIONS2

    INTEGER  shift, and go to state 209


State 181

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER paraF • DECLARATIONS2

    mcDIMENSION    shift, and go to state 210
    point_virgule  shift, and go to state 211
    virgule        shift, and go to state 212

    DECLARATIONS2  go to state 213


State 182

    8 DECLARATIONS1: virgule identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 8 (DECLARATIONS1)


State 183

   78 Liste: identificateur paraO INTEGER virgule INTEGER • paraF

    paraF  shift, and go to state 214


State 184

   76 Liste: Liste virgule identificateur paraO INTEGER • paraF
   77      | Liste virgule identificateur paraO INTEGER • virgule INTEGER paraF

    virgule  shift, and go to state 215
    paraF    shift, and go to state 216


State 185

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur • eq EXPR mcENDR Fonction
   34 Affectation: identificateur • eq EXPR
   72 Appel: identificateur • paraO Liste paraF

    eq     shift, and go to state 217
    paraO  shift, and go to state 53


State 186

   71 ES_WRITE_OPTIONAL: virgule identificateur chaine •

    $default  reduce using rule 71 (ES_WRITE_OPTIONAL)


State 187

   98 operand: paraO expression paraF •

    $default  reduce using rule 98 (operand)


State 188

   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition
   81 Condition: mcIF expression mcTHEN INST_S mcELSE INST_S • mcENDIF

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcENDIF         shift, and go to state 218
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 189

   84 expression: expression • point AND point expression
   85           | expression • point OR point expression
   85           | expression point OR point expression •

    $default  reduce using rule 85 (expression)


State 190

   84 expression: expression • point AND point expression
   84           | expression point AND point expression •
   85           | expression • point OR point expression

    $default  reduce using rule 84 (expression)


State 191

   88 comparison: operand point GT point operand •

    $default  reduce using rule 88 (comparison)


State 192

   87 comparison: operand point EQ point operand •

    $default  reduce using rule 87 (comparison)


State 193

   89 comparison: operand point GE point operand •

    $default  reduce using rule 89 (comparison)


State 194

   90 comparison: operand point NE point operand •

    $default  reduce using rule 90 (comparison)


State 195

   91 comparison: operand point LE point operand •

    $default  reduce using rule 91 (comparison)


State 196

   92 comparison: operand point LT point operand •

    $default  reduce using rule 92 (comparison)


State 197

   80 Boucle: mcDOWHILE paraO expression paraF INST_S mcENDDO •

    $default  reduce using rule 80 (Boucle)


State 198

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 219


State 199

   40 APPEL_FONC: mcCALL identificateur paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 62
    paraF    shift, and go to state 220


State 200

   50 MATH_VAR: paraO MATH_VAR paraF MATH_VAR1 •

    $default  reduce using rule 50 (MATH_VAR)


State 201

   43 MATH_VAR: identificateur paraO INTEGER virgule • INTEGER paraF MATH_VAR1

    INTEGER  shift, and go to state 221


State 202

   42 MATH_VAR: identificateur paraO INTEGER paraF • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 222
    OPER       go to state 137


State 203

   53 MATH_VAR1: INTEGERPOSITIF OPER MATH_VAR •

    $default  reduce using rule 53 (MATH_VAR1)


State 204

   52 MATH_VAR1: INTEGERNEGATIF OPER MATH_VAR •

    $default  reduce using rule 52 (MATH_VAR1)


State 205

   54 MATH_VAR1: REALNEGATIF OPER MATH_VAR •

    $default  reduce using rule 54 (MATH_VAR1)


State 206

   55 MATH_VAR1: REALPOSITIF OPER MATH_VAR •

    $default  reduce using rule 55 (MATH_VAR1)


State 207

   62 CHAINE_STRING1: plus IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 62 (CHAINE_STRING1)


State 208

   63 CHAINE_STRING1: mpins IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 63 (CHAINE_STRING1)


State 209

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER • paraF DECLARATIONS2

    paraF  shift, and go to state 223


State 210

   15 DECLARATIONS2: mcDIMENSION • paraO INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION • paraO INTEGER virgule INTEGER paraF DECLARATIONS1

    paraO  shift, and go to state 224


State 211

   12 DECLARATIONS2: point_virgule • DECLARATIONS
   13              | point_virgule •

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    $default  reduce using rule 13 (DECLARATIONS2)

    DECLARATIONS  go to state 225
    type          go to state 12


State 212

   14 DECLARATIONS2: virgule • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 226


State 213

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER paraF DECLARATIONS2 •

    $default  reduce using rule 9 (DECLARATIONS1)


State 214

   78 Liste: identificateur paraO INTEGER virgule INTEGER paraF •

    $default  reduce using rule 78 (Liste)


State 215

   77 Liste: Liste virgule identificateur paraO INTEGER virgule • INTEGER paraF

    INTEGER  shift, and go to state 227


State 216

   76 Liste: Liste virgule identificateur paraO INTEGER paraF •

    $default  reduce using rule 76 (Liste)


State 217

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq • EXPR mcENDR Fonction
   34 Affectation: identificateur eq • EXPR

    mcTRUE          shift, and go to state 76
    mcFALSE         shift, and go to state 77
    mcCALL          shift, and go to state 78
    paraO           shift, and go to state 79
    identificateur  shift, and go to state 80
    INTEGER         shift, and go to state 81
    INTEGERPOSITIF  shift, and go to state 82
    INTEGERNEGATIF  shift, and go to state 83
    REAL            shift, and go to state 84
    caracter        shift, and go to state 85
    chaine          shift, and go to state 86
    REALNEGATIF     shift, and go to state 87
    REALPOSITIF     shift, and go to state 88

    EXPR           go to state 228
    APPEL_FONC     go to state 90
    MATH_VAR       go to state 91
    CHAINE_STRING  go to state 92
    IDFI_CHAR      go to state 93


State 218

   81 Condition: mcIF expression mcTHEN INST_S mcELSE INST_S mcENDIF •

    $default  reduce using rule 81 (Condition)


State 219

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 62
    paraF    shift, and go to state 229


State 220

   40 APPEL_FONC: mcCALL identificateur paraO Liste paraF •

    $default  reduce using rule 40 (APPEL_FONC)


State 221

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER • paraF MATH_VAR1

    paraF  shift, and go to state 230


State 222

   42 MATH_VAR: identificateur paraO INTEGER paraF MATH_VAR1 •

    $default  reduce using rule 42 (MATH_VAR)


State 223

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER paraF • DECLARATIONS2

    mcDIMENSION    shift, and go to state 210
    point_virgule  shift, and go to state 211
    virgule        shift, and go to state 212

    DECLARATIONS2  go to state 231


State 224

   15 DECLARATIONS2: mcDIMENSION paraO • INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION paraO • INTEGER virgule INTEGER paraF DECLARATIONS1

    INTEGER  shift, and go to state 232


State 225

   12 DECLARATIONS2: point_virgule DECLARATIONS •

    $default  reduce using rule 12 (DECLARATIONS2)


State 226

   14 DECLARATIONS2: virgule identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 233


State 227

   77 Liste: Liste virgule identificateur paraO INTEGER virgule INTEGER • paraF

    paraF  shift, and go to state 234


State 228

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR • mcENDR Fonction
   34 Affectation: identificateur eq EXPR •

    mcENDR  shift, and go to state 235

    $default  reduce using rule 34 (Affectation)


State 229

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste paraF •

    $default  reduce using rule 73 (Equivalence)


State 230

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER paraF • MATH_VAR1

    plus            shift, and go to state 127
    mpins           shift, and go to state 128
    division        shift, and go to state 129
    etoile          shift, and go to state 130
    INTEGERPOSITIF  shift, and go to state 132
    INTEGERNEGATIF  shift, and go to state 133
    REALNEGATIF     shift, and go to state 134
    REALPOSITIF     shift, and go to state 135

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 236
    OPER       go to state 137


State 231

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS2 •

    $default  reduce using rule 10 (DECLARATIONS1)


State 232

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER • paraF DECLARATIONS1
   16              | mcDIMENSION paraO INTEGER • virgule INTEGER paraF DECLARATIONS1

    virgule  shift, and go to state 237
    paraF    shift, and go to state 238


State 233

   14 DECLARATIONS2: virgule identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 56
    eq             shift, and go to state 57
    point_virgule  shift, and go to state 58
    virgule        shift, and go to state 59

    DECLARATIONS1  go to state 239


State 234

   77 Liste: Liste virgule identificateur paraO INTEGER virgule INTEGER paraF •

    $default  reduce using rule 77 (Liste)


State 235

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR • Fonction

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4
    mcPROGRAM    shift, and go to state 5

    Fonction  go to state 240
    type      go to state 7


State 236

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER paraF MATH_VAR1 •

    $default  reduce using rule 43 (MATH_VAR)


State 237

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule • INTEGER paraF DECLARATIONS1

    INTEGER  shift, and go to state 241


State 238

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER paraF • DECLARATIONS1

    mcDIMENSION    shift, and go to state 56
    eq             shift, and go to state 57
    point_virgule  shift, and go to state 58
    virgule        shift, and go to state 59

    DECLARATIONS1  go to state 242


State 239

   14 DECLARATIONS2: virgule identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 14 (DECLARATIONS2)


State 240

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction •

    $default  reduce using rule 1 (Fonction)


State 241

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER • paraF DECLARATIONS1

    paraF  shift, and go to state 243


State 242

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER paraF DECLARATIONS1 •

    $default  reduce using rule 15 (DECLARATIONS2)


State 243

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER paraF • DECLARATIONS1

    mcDIMENSION    shift, and go to state 56
    eq             shift, and go to state 57
    point_virgule  shift, and go to state 58
    virgule        shift, and go to state 59

    DECLARATIONS1  go to state 244


State 244

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS1 •

    $default  reduce using rule 16 (DECLARATIONS2)
