Terminals unused in grammar

    or
    aro
    gui
    commantaire
    UNARY_OPERATOR


Grammar

    0 $accept: Fonction $end

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction
    2         | mcPROGRAM identificateur DECLARATIONS INST_S mcEND

    3 DECLARATIONS: type identificateur caractere1 DECLARATIONS1

    4 caractere1: etoile INTEGER
    5           | ε

    6 DECLARATIONS1: point_virgule DECLARATIONS
    7              | point_virgule
    8              | virgule identificateur caractere1 DECLARATIONS1
    9              | mcDIMENSION paraO INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS2
   11              | eq VALEURS DECLARATIONS1

   12 DECLARATIONS2: point_virgule DECLARATIONS
   13              | point_virgule
   14              | virgule identificateur caractere1 DECLARATIONS1
   15              | mcDIMENSION paraO INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS1

   17 VALEURS: REAL
   18        | INTEGER
   19        | caracter
   20        | chaine

   21 type: mcINTEGER
   22     | mcLOGICAL
   23     | mcREAL
   24     | mcCHARACTER

   25 INST_S: INST_S INSTR point_virgule
   26       | INST_S Condition
   27       | ε

   28 INSTR: Affectation
   29      | ES
   30      | Boucle
   31      | Appel
   32      | Equivalence
   33      | ε

   34 Affectation: identificateur eq EXPR

   35 EXPR: CHAINE_STRING
   36     | MATH_VAR
   37     | APPEL_FONC
   38     | mcFALSE
   39     | mcTRUE

   40 APPEL_FONC: mcCALL identificateur paraO Liste paraF

   41 MATH_VAR: identificateur MATH_VAR1
   42         | identificateur paraO INTEGER paraF MATH_VAR1
   43         | identificateur paraO INTEGER virgule INTEGER paraF MATH_VAR1
   44         | INTEGER MATH_VAR1
   45         | INTEGERPOSITIF MATH_VAR1
   46         | INTEGERNEGATIF MATH_VAR1
   47         | REAL MATH_VAR1
   48         | REALPOSITIF MATH_VAR1
   49         | REALNEGATIF MATH_VAR1
   50         | paraO MATH_VAR paraF MATH_VAR1

   51 MATH_VAR1: OPER MATH_VAR
   52          | INTEGERNEGATIF OPER MATH_VAR
   53          | INTEGERPOSITIF OPER MATH_VAR
   54          | REALNEGATIF OPER MATH_VAR
   55          | REALPOSITIF OPER MATH_VAR
   56          | INTEGERNEGATIF
   57          | INTEGERPOSITIF
   58          | REALNEGATIF
   59          | REALPOSITIF
   60          | ε

   61 CHAINE_STRING: IDFI_CHAR CHAINE_STRING1

   62 CHAINE_STRING1: plus IDFI_CHAR CHAINE_STRING1
   63               | mpins IDFI_CHAR CHAINE_STRING1
   64               | ε

   65 IDFI_CHAR: chaine
   66          | caracter

   67 ES: mcREAD paraO identificateur paraF
   68   | mcWRITE paraO chaine paraF
   69   | mcWRITE paraO chaine ES_WRITE_OPTIONAL paraF

   70 ES_WRITE_OPTIONAL: virgule identificateur
   71                  | virgule identificateur chaine

   72 Appel: identificateur paraO Liste paraF

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste paraF

   74 Liste: identificateur
   75      | Liste virgule identificateur
   76      | Liste virgule identificateur paraO INTEGER paraF
   77      | Liste virgule identificateur paraO INTEGER virgule INTEGER paraF
   78      | identificateur paraO INTEGER virgule INTEGER paraF
   79      | identificateur paraO INTEGER paraF

   80 Boucle: mcDOWHILE paraO expression paraF INSTR mcENDO

   81 Condition: mcIF paraO expression paraF mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO expression paraF mcTHEN INST_S mcENDIF

   83 expression: paraO expression paraF
   84           | expression point AND point expression
   85           | expression point OR point expression
   86           | comparison

   87 comparison: operand point EQ point operand
   88           | operand point GT point operand
   89           | operand point GE point operand
   90           | operand point NE point operand
   91           | operand point LE point operand
   92           | operand point LT point operand
   93           | ε

   94 operand: identificateur INTEGERPOSITIF
   95        | identificateur INTEGERNEGATIF
   96        | identificateur division operand
   97        | identificateur etoile operand
   98        | paraO operand paraF
   99        | identificateur
  100        | mcTRUE
  101        | mcFALSE

  102 OPER: plus
  103     | mpins
  104     | etoile
  105     | division


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    mcTRUE (258) 39 100
    mcFALSE (259) 38 101
    mcINTEGER (260) 21
    mcREAL (261) 23
    mcCHARACTER (262) 24
    mcLOGICAL (263) 22
    mcREAD (264) 67
    mcWRITE (265) 68 69
    mcDIMENSION (266) 9 10 15 16
    mcPROGRAM (267) 2
    mcEND (268) 2
    mcROUTINE (269) 1
    mcENDR (270) 1
    mcCALL (271) 40
    mcIF (272) 81 82
    mcTHEN (273) 81 82
    mcELSE (274) 81
    mcENDIF (275) 81 82
    mcDOWHILE (276) 80
    mcENDO (277) 80
    PartageMemoire (278) 73
    OR (279) 85
    AND (280) 84
    GT (281) 88
    EQ (282) 87
    GE (283) 89
    NE (284) 90
    LE (285) 91
    LT (286) 92
    eq (287) 1 11 34
    point_virgule (288) 6 7 12 13 25
    point (289) 84 85 87 88 89 90 91 92
    plus (290) 62 102
    mpins (291) 63 103
    division (292) 96 105
    or (293)
    aro (294)
    etoile (295) 4 97 104
    virgule (296) 8 10 14 16 43 70 71 73 75 76 77 78
    gui (297)
    paraO (298) 1 9 10 15 16 40 42 43 50 67 68 69 72 73 76 77 78 79 80 81 82 83 98
    paraF (299) 1 9 10 15 16 40 42 43 50 67 68 69 72 73 76 77 78 79 80 81 82 83 98
    identificateur (300) 1 2 3 8 14 34 40 41 42 43 67 70 71 72 74 75 76 77 78 79 94 95 96 97 99
    INTEGER (301) 4 9 10 15 16 18 42 43 44 76 77 78 79
    INTEGERPOSITIF (302) 45 53 57 94
    INTEGERNEGATIF (303) 46 52 56 95
    REAL (304) 17 47
    caracter (305) 19 66
    chaine (306) 20 65 68 69 71
    commantaire (307)
    REALNEGATIF (308) 49 54 58
    REALPOSITIF (309) 48 55 59
    UNARY_OPERATOR (310)


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    Fonction (57)
        on left: 1 2
        on right: 0 1
    DECLARATIONS (58)
        on left: 3
        on right: 1 2 6 12
    caractere1 (59)
        on left: 4 5
        on right: 3 8 14
    DECLARATIONS1 (60)
        on left: 6 7 8 9 10 11
        on right: 3 8 11 14 15 16
    DECLARATIONS2 (61)
        on left: 12 13 14 15 16
        on right: 9 10
    VALEURS (62)
        on left: 17 18 19 20
        on right: 11
    type (63)
        on left: 21 22 23 24
        on right: 1 3
    INST_S (64)
        on left: 25 26 27
        on right: 1 2 25 26 81 82
    INSTR (65)
        on left: 28 29 30 31 32 33
        on right: 25 80
    Affectation (66)
        on left: 34
        on right: 28
    EXPR (67)
        on left: 35 36 37 38 39
        on right: 1 34
    APPEL_FONC (68)
        on left: 40
        on right: 37
    MATH_VAR (69)
        on left: 41 42 43 44 45 46 47 48 49 50
        on right: 36 50 51 52 53 54 55
    MATH_VAR1 (70)
        on left: 51 52 53 54 55 56 57 58 59 60
        on right: 41 42 43 44 45 46 47 48 49 50
    CHAINE_STRING (71)
        on left: 61
        on right: 35
    CHAINE_STRING1 (72)
        on left: 62 63 64
        on right: 61 62 63
    IDFI_CHAR (73)
        on left: 65 66
        on right: 61 62 63
    ES (74)
        on left: 67 68 69
        on right: 29
    ES_WRITE_OPTIONAL (75)
        on left: 70 71
        on right: 69
    Appel (76)
        on left: 72
        on right: 31
    Equivalence (77)
        on left: 73
        on right: 32
    Liste (78)
        on left: 74 75 76 77 78 79
        on right: 1 40 72 73 75 76 77
    Boucle (79)
        on left: 80
        on right: 30
    Condition (80)
        on left: 81 82
        on right: 26
    expression (81)
        on left: 83 84 85 86
        on right: 80 81 82 83 84 85
    comparison (82)
        on left: 87 88 89 90 91 92 93
        on right: 86
    operand (83)
        on left: 94 95 96 97 98 99 100 101
        on right: 87 88 89 90 91 92 96 97 98
    OPER (84)
        on left: 102 103 104 105
        on right: 51 52 53 54 55


State 0

    0 $accept: • Fonction $end

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4
    mcPROGRAM    shift, and go to state 5

    Fonction  go to state 6
    type      go to state 7


State 1

   21 type: mcINTEGER •

    $default  reduce using rule 21 (type)


State 2

   23 type: mcREAL •

    $default  reduce using rule 23 (type)


State 3

   24 type: mcCHARACTER •

    $default  reduce using rule 24 (type)


State 4

   22 type: mcLOGICAL •

    $default  reduce using rule 22 (type)


State 5

    2 Fonction: mcPROGRAM • identificateur DECLARATIONS INST_S mcEND

    identificateur  shift, and go to state 8


State 6

    0 $accept: Fonction • $end

    $end  shift, and go to state 9


State 7

    1 Fonction: type • mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    mcROUTINE  shift, and go to state 10


State 8

    2 Fonction: mcPROGRAM identificateur • DECLARATIONS INST_S mcEND

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    DECLARATIONS  go to state 11
    type          go to state 12


State 9

    0 $accept: Fonction $end •

    $default  accept


State 10

    1 Fonction: type mcROUTINE • identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    identificateur  shift, and go to state 13


State 11

    2 Fonction: mcPROGRAM identificateur DECLARATIONS • INST_S mcEND

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 14


State 12

    3 DECLARATIONS: type • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 15


State 13

    1 Fonction: type mcROUTINE identificateur • paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    paraO  shift, and go to state 16


State 14

    2 Fonction: mcPROGRAM identificateur DECLARATIONS INST_S • mcEND
   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcEND           shift, and go to state 19
    mcIF            shift, and go to state 20
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 15

    3 DECLARATIONS: type identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 32


State 16

    1 Fonction: type mcROUTINE identificateur paraO • Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    identificateur  shift, and go to state 33

    Liste  go to state 34


State 17

   67 ES: mcREAD • paraO identificateur paraF

    paraO  shift, and go to state 35


State 18

   68 ES: mcWRITE • paraO chaine paraF
   69   | mcWRITE • paraO chaine ES_WRITE_OPTIONAL paraF

    paraO  shift, and go to state 36


State 19

    2 Fonction: mcPROGRAM identificateur DECLARATIONS INST_S mcEND •

    $default  reduce using rule 2 (Fonction)


State 20

   81 Condition: mcIF • paraO expression paraF mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF • paraO expression paraF mcTHEN INST_S mcENDIF

    paraO  shift, and go to state 37


State 21

   80 Boucle: mcDOWHILE • paraO expression paraF INSTR mcENDO

    paraO  shift, and go to state 38


State 22

   73 Equivalence: PartageMemoire • paraO Liste paraF virgule paraO Liste paraF

    paraO  shift, and go to state 39


State 23

   34 Affectation: identificateur • eq EXPR
   72 Appel: identificateur • paraO Liste paraF

    eq     shift, and go to state 40
    paraO  shift, and go to state 41


State 24

   25 INST_S: INST_S INSTR • point_virgule

    point_virgule  shift, and go to state 42


State 25

   28 INSTR: Affectation •

    $default  reduce using rule 28 (INSTR)


State 26

   29 INSTR: ES •

    $default  reduce using rule 29 (INSTR)


State 27

   31 INSTR: Appel •

    $default  reduce using rule 31 (INSTR)


State 28

   32 INSTR: Equivalence •

    $default  reduce using rule 32 (INSTR)


State 29

   30 INSTR: Boucle •

    $default  reduce using rule 30 (INSTR)


State 30

   26 INST_S: INST_S Condition •

    $default  reduce using rule 26 (INST_S)


State 31

    4 caractere1: etoile • INTEGER

    INTEGER  shift, and go to state 43


State 32

    3 DECLARATIONS: type identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 48


State 33

   74 Liste: identificateur •
   78      | identificateur • paraO INTEGER virgule INTEGER paraF
   79      | identificateur • paraO INTEGER paraF

    paraO  shift, and go to state 49

    $default  reduce using rule 74 (Liste)


State 34

    1 Fonction: type mcROUTINE identificateur paraO Liste • paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 51


State 35

   67 ES: mcREAD paraO • identificateur paraF

    identificateur  shift, and go to state 52


State 36

   68 ES: mcWRITE paraO • chaine paraF
   69   | mcWRITE paraO • chaine ES_WRITE_OPTIONAL paraF

    chaine  shift, and go to state 53


State 37

   81 Condition: mcIF paraO • expression paraF mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO • expression paraF mcTHEN INST_S mcENDIF

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57

    $default  reduce using rule 93 (comparison)

    expression  go to state 58
    comparison  go to state 59
    operand     go to state 60


State 38

   80 Boucle: mcDOWHILE paraO • expression paraF INSTR mcENDO

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57

    $default  reduce using rule 93 (comparison)

    expression  go to state 61
    comparison  go to state 59
    operand     go to state 60


State 39

   73 Equivalence: PartageMemoire paraO • Liste paraF virgule paraO Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 62


State 40

   34 Affectation: identificateur eq • EXPR

    mcTRUE          shift, and go to state 63
    mcFALSE         shift, and go to state 64
    mcCALL          shift, and go to state 65
    paraO           shift, and go to state 66
    identificateur  shift, and go to state 67
    INTEGER         shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70
    REAL            shift, and go to state 71
    caracter        shift, and go to state 72
    chaine          shift, and go to state 73
    REALNEGATIF     shift, and go to state 74
    REALPOSITIF     shift, and go to state 75

    EXPR           go to state 76
    APPEL_FONC     go to state 77
    MATH_VAR       go to state 78
    CHAINE_STRING  go to state 79
    IDFI_CHAR      go to state 80


State 41

   72 Appel: identificateur paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 81


State 42

   25 INST_S: INST_S INSTR point_virgule •

    $default  reduce using rule 25 (INST_S)


State 43

    4 caractere1: etoile INTEGER •

    $default  reduce using rule 4 (caractere1)


State 44

    9 DECLARATIONS1: mcDIMENSION • paraO INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION • paraO INTEGER virgule INTEGER paraF DECLARATIONS2

    paraO  shift, and go to state 82


State 45

   11 DECLARATIONS1: eq • VALEURS DECLARATIONS1

    INTEGER   shift, and go to state 83
    REAL      shift, and go to state 84
    caracter  shift, and go to state 85
    chaine    shift, and go to state 86

    VALEURS  go to state 87


State 46

    6 DECLARATIONS1: point_virgule • DECLARATIONS
    7              | point_virgule •

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    $default  reduce using rule 7 (DECLARATIONS1)

    DECLARATIONS  go to state 88
    type          go to state 12


State 47

    8 DECLARATIONS1: virgule • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 89


State 48

    3 DECLARATIONS: type identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 3 (DECLARATIONS)


State 49

   78 Liste: identificateur paraO • INTEGER virgule INTEGER paraF
   79      | identificateur paraO • INTEGER paraF

    INTEGER  shift, and go to state 90


State 50

   75 Liste: Liste virgule • identificateur
   76      | Liste virgule • identificateur paraO INTEGER paraF
   77      | Liste virgule • identificateur paraO INTEGER virgule INTEGER paraF

    identificateur  shift, and go to state 91


State 51

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF • DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    DECLARATIONS  go to state 92
    type          go to state 12


State 52

   67 ES: mcREAD paraO identificateur • paraF

    paraF  shift, and go to state 93


State 53

   68 ES: mcWRITE paraO chaine • paraF
   69   | mcWRITE paraO chaine • ES_WRITE_OPTIONAL paraF

    virgule  shift, and go to state 94
    paraF    shift, and go to state 95

    ES_WRITE_OPTIONAL  go to state 96


State 54

  100 operand: mcTRUE •

    $default  reduce using rule 100 (operand)


State 55

  101 operand: mcFALSE •

    $default  reduce using rule 101 (operand)


State 56

   83 expression: paraO • expression paraF
   98 operand: paraO • operand paraF

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57

    $default  reduce using rule 93 (comparison)

    expression  go to state 97
    comparison  go to state 59
    operand     go to state 98


State 57

   94 operand: identificateur • INTEGERPOSITIF
   95        | identificateur • INTEGERNEGATIF
   96        | identificateur • division operand
   97        | identificateur • etoile operand
   99        | identificateur •

    division        shift, and go to state 99
    etoile          shift, and go to state 100
    INTEGERPOSITIF  shift, and go to state 101
    INTEGERNEGATIF  shift, and go to state 102

    $default  reduce using rule 99 (operand)


State 58

   81 Condition: mcIF paraO expression • paraF mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO expression • paraF mcTHEN INST_S mcENDIF
   84 expression: expression • point AND point expression
   85           | expression • point OR point expression

    point  shift, and go to state 103
    paraF  shift, and go to state 104


State 59

   86 expression: comparison •

    $default  reduce using rule 86 (expression)


State 60

   87 comparison: operand • point EQ point operand
   88           | operand • point GT point operand
   89           | operand • point GE point operand
   90           | operand • point NE point operand
   91           | operand • point LE point operand
   92           | operand • point LT point operand

    point  shift, and go to state 105


State 61

   80 Boucle: mcDOWHILE paraO expression • paraF INSTR mcENDO
   84 expression: expression • point AND point expression
   85           | expression • point OR point expression

    point  shift, and go to state 103
    paraF  shift, and go to state 106


State 62

   73 Equivalence: PartageMemoire paraO Liste • paraF virgule paraO Liste paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 107


State 63

   39 EXPR: mcTRUE •

    $default  reduce using rule 39 (EXPR)


State 64

   38 EXPR: mcFALSE •

    $default  reduce using rule 38 (EXPR)


State 65

   40 APPEL_FONC: mcCALL • identificateur paraO Liste paraF

    identificateur  shift, and go to state 108


State 66

   50 MATH_VAR: paraO • MATH_VAR paraF MATH_VAR1

    paraO           shift, and go to state 66
    identificateur  shift, and go to state 67
    INTEGER         shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70
    REAL            shift, and go to state 71
    REALNEGATIF     shift, and go to state 74
    REALPOSITIF     shift, and go to state 75

    MATH_VAR  go to state 109


State 67

   41 MATH_VAR: identificateur • MATH_VAR1
   42         | identificateur • paraO INTEGER paraF MATH_VAR1
   43         | identificateur • paraO INTEGER virgule INTEGER paraF MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    paraO           shift, and go to state 114
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 119
    OPER       go to state 120


State 68

   44 MATH_VAR: INTEGER • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 121
    OPER       go to state 120


State 69

   45 MATH_VAR: INTEGERPOSITIF • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 122
    OPER       go to state 120


State 70

   46 MATH_VAR: INTEGERNEGATIF • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 123
    OPER       go to state 120


State 71

   47 MATH_VAR: REAL • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 124
    OPER       go to state 120


State 72

   66 IDFI_CHAR: caracter •

    $default  reduce using rule 66 (IDFI_CHAR)


State 73

   65 IDFI_CHAR: chaine •

    $default  reduce using rule 65 (IDFI_CHAR)


State 74

   49 MATH_VAR: REALNEGATIF • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 125
    OPER       go to state 120


State 75

   48 MATH_VAR: REALPOSITIF • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 126
    OPER       go to state 120


State 76

   34 Affectation: identificateur eq EXPR •

    $default  reduce using rule 34 (Affectation)


State 77

   37 EXPR: APPEL_FONC •

    $default  reduce using rule 37 (EXPR)


State 78

   36 EXPR: MATH_VAR •

    $default  reduce using rule 36 (EXPR)


State 79

   35 EXPR: CHAINE_STRING •

    $default  reduce using rule 35 (EXPR)


State 80

   61 CHAINE_STRING: IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 127
    mpins  shift, and go to state 128

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 129


State 81

   72 Appel: identificateur paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 130


State 82

    9 DECLARATIONS1: mcDIMENSION paraO • INTEGER paraF DECLARATIONS2
   10              | mcDIMENSION paraO • INTEGER virgule INTEGER paraF DECLARATIONS2

    INTEGER  shift, and go to state 131


State 83

   18 VALEURS: INTEGER •

    $default  reduce using rule 18 (VALEURS)


State 84

   17 VALEURS: REAL •

    $default  reduce using rule 17 (VALEURS)


State 85

   19 VALEURS: caracter •

    $default  reduce using rule 19 (VALEURS)


State 86

   20 VALEURS: chaine •

    $default  reduce using rule 20 (VALEURS)


State 87

   11 DECLARATIONS1: eq VALEURS • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 132


State 88

    6 DECLARATIONS1: point_virgule DECLARATIONS •

    $default  reduce using rule 6 (DECLARATIONS1)


State 89

    8 DECLARATIONS1: virgule identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 133


State 90

   78 Liste: identificateur paraO INTEGER • virgule INTEGER paraF
   79      | identificateur paraO INTEGER • paraF

    virgule  shift, and go to state 134
    paraF    shift, and go to state 135


State 91

   75 Liste: Liste virgule identificateur •
   76      | Liste virgule identificateur • paraO INTEGER paraF
   77      | Liste virgule identificateur • paraO INTEGER virgule INTEGER paraF

    paraO  shift, and go to state 136

    $default  reduce using rule 75 (Liste)


State 92

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS • INST_S identificateur eq EXPR mcENDR Fonction

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 137


State 93

   67 ES: mcREAD paraO identificateur paraF •

    $default  reduce using rule 67 (ES)


State 94

   70 ES_WRITE_OPTIONAL: virgule • identificateur
   71                  | virgule • identificateur chaine

    identificateur  shift, and go to state 138


State 95

   68 ES: mcWRITE paraO chaine paraF •

    $default  reduce using rule 68 (ES)


State 96

   69 ES: mcWRITE paraO chaine ES_WRITE_OPTIONAL • paraF

    paraF  shift, and go to state 139


State 97

   83 expression: paraO expression • paraF
   84           | expression • point AND point expression
   85           | expression • point OR point expression

    point  shift, and go to state 103
    paraF  shift, and go to state 140


State 98

   87 comparison: operand • point EQ point operand
   88           | operand • point GT point operand
   89           | operand • point GE point operand
   90           | operand • point NE point operand
   91           | operand • point LE point operand
   92           | operand • point LT point operand
   98 operand: paraO operand • paraF

    point  shift, and go to state 105
    paraF  shift, and go to state 141


State 99

   96 operand: identificateur division • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 143


State 100

   97 operand: identificateur etoile • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 144


State 101

   94 operand: identificateur INTEGERPOSITIF •

    $default  reduce using rule 94 (operand)


State 102

   95 operand: identificateur INTEGERNEGATIF •

    $default  reduce using rule 95 (operand)


State 103

   84 expression: expression point • AND point expression
   85           | expression point • OR point expression

    OR   shift, and go to state 145
    AND  shift, and go to state 146


State 104

   81 Condition: mcIF paraO expression paraF • mcTHEN INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO expression paraF • mcTHEN INST_S mcENDIF

    mcTHEN  shift, and go to state 147


State 105

   87 comparison: operand point • EQ point operand
   88           | operand point • GT point operand
   89           | operand point • GE point operand
   90           | operand point • NE point operand
   91           | operand point • LE point operand
   92           | operand point • LT point operand

    GT  shift, and go to state 148
    EQ  shift, and go to state 149
    GE  shift, and go to state 150
    NE  shift, and go to state 151
    LE  shift, and go to state 152
    LT  shift, and go to state 153


State 106

   80 Boucle: mcDOWHILE paraO expression paraF • INSTR mcENDO

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 154
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29


State 107

   73 Equivalence: PartageMemoire paraO Liste paraF • virgule paraO Liste paraF

    virgule  shift, and go to state 155


State 108

   40 APPEL_FONC: mcCALL identificateur • paraO Liste paraF

    paraO  shift, and go to state 156


State 109

   50 MATH_VAR: paraO MATH_VAR • paraF MATH_VAR1

    paraF  shift, and go to state 157


State 110

  102 OPER: plus •

    $default  reduce using rule 102 (OPER)


State 111

  103 OPER: mpins •

    $default  reduce using rule 103 (OPER)


State 112

  105 OPER: division •

    $default  reduce using rule 105 (OPER)


State 113

  104 OPER: etoile •

    $default  reduce using rule 104 (OPER)


State 114

   42 MATH_VAR: identificateur paraO • INTEGER paraF MATH_VAR1
   43         | identificateur paraO • INTEGER virgule INTEGER paraF MATH_VAR1

    INTEGER  shift, and go to state 158


State 115

   53 MATH_VAR1: INTEGERPOSITIF • OPER MATH_VAR
   57          | INTEGERPOSITIF •

    plus      shift, and go to state 110
    mpins     shift, and go to state 111
    division  shift, and go to state 112
    etoile    shift, and go to state 113

    $default  reduce using rule 57 (MATH_VAR1)

    OPER  go to state 159


State 116

   52 MATH_VAR1: INTEGERNEGATIF • OPER MATH_VAR
   56          | INTEGERNEGATIF •

    plus      shift, and go to state 110
    mpins     shift, and go to state 111
    division  shift, and go to state 112
    etoile    shift, and go to state 113

    $default  reduce using rule 56 (MATH_VAR1)

    OPER  go to state 160


State 117

   54 MATH_VAR1: REALNEGATIF • OPER MATH_VAR
   58          | REALNEGATIF •

    plus      shift, and go to state 110
    mpins     shift, and go to state 111
    division  shift, and go to state 112
    etoile    shift, and go to state 113

    $default  reduce using rule 58 (MATH_VAR1)

    OPER  go to state 161


State 118

   55 MATH_VAR1: REALPOSITIF • OPER MATH_VAR
   59          | REALPOSITIF •

    plus      shift, and go to state 110
    mpins     shift, and go to state 111
    division  shift, and go to state 112
    etoile    shift, and go to state 113

    $default  reduce using rule 59 (MATH_VAR1)

    OPER  go to state 162


State 119

   41 MATH_VAR: identificateur MATH_VAR1 •

    $default  reduce using rule 41 (MATH_VAR)


State 120

   51 MATH_VAR1: OPER • MATH_VAR

    paraO           shift, and go to state 66
    identificateur  shift, and go to state 67
    INTEGER         shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70
    REAL            shift, and go to state 71
    REALNEGATIF     shift, and go to state 74
    REALPOSITIF     shift, and go to state 75

    MATH_VAR  go to state 163


State 121

   44 MATH_VAR: INTEGER MATH_VAR1 •

    $default  reduce using rule 44 (MATH_VAR)


State 122

   45 MATH_VAR: INTEGERPOSITIF MATH_VAR1 •

    $default  reduce using rule 45 (MATH_VAR)


State 123

   46 MATH_VAR: INTEGERNEGATIF MATH_VAR1 •

    $default  reduce using rule 46 (MATH_VAR)


State 124

   47 MATH_VAR: REAL MATH_VAR1 •

    $default  reduce using rule 47 (MATH_VAR)


State 125

   49 MATH_VAR: REALNEGATIF MATH_VAR1 •

    $default  reduce using rule 49 (MATH_VAR)


State 126

   48 MATH_VAR: REALPOSITIF MATH_VAR1 •

    $default  reduce using rule 48 (MATH_VAR)


State 127

   62 CHAINE_STRING1: plus • IDFI_CHAR CHAINE_STRING1

    caracter  shift, and go to state 72
    chaine    shift, and go to state 73

    IDFI_CHAR  go to state 164


State 128

   63 CHAINE_STRING1: mpins • IDFI_CHAR CHAINE_STRING1

    caracter  shift, and go to state 72
    chaine    shift, and go to state 73

    IDFI_CHAR  go to state 165


State 129

   61 CHAINE_STRING: IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 61 (CHAINE_STRING)


State 130

   72 Appel: identificateur paraO Liste paraF •

    $default  reduce using rule 72 (Appel)


State 131

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER • paraF DECLARATIONS2
   10              | mcDIMENSION paraO INTEGER • virgule INTEGER paraF DECLARATIONS2

    virgule  shift, and go to state 166
    paraF    shift, and go to state 167


State 132

   11 DECLARATIONS1: eq VALEURS DECLARATIONS1 •

    $default  reduce using rule 11 (DECLARATIONS1)


State 133

    8 DECLARATIONS1: virgule identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 168


State 134

   78 Liste: identificateur paraO INTEGER virgule • INTEGER paraF

    INTEGER  shift, and go to state 169


State 135

   79 Liste: identificateur paraO INTEGER paraF •

    $default  reduce using rule 79 (Liste)


State 136

   76 Liste: Liste virgule identificateur paraO • INTEGER paraF
   77      | Liste virgule identificateur paraO • INTEGER virgule INTEGER paraF

    INTEGER  shift, and go to state 170


State 137

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S • identificateur eq EXPR mcENDR Fonction
   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 171

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 138

   70 ES_WRITE_OPTIONAL: virgule identificateur •
   71                  | virgule identificateur • chaine

    chaine  shift, and go to state 172

    $default  reduce using rule 70 (ES_WRITE_OPTIONAL)


State 139

   69 ES: mcWRITE paraO chaine ES_WRITE_OPTIONAL paraF •

    $default  reduce using rule 69 (ES)


State 140

   83 expression: paraO expression paraF •

    $default  reduce using rule 83 (expression)


State 141

   98 operand: paraO operand paraF •

    $default  reduce using rule 98 (operand)


State 142

   98 operand: paraO • operand paraF

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 173


State 143

   96 operand: identificateur division operand •

    $default  reduce using rule 96 (operand)


State 144

   97 operand: identificateur etoile operand •

    $default  reduce using rule 97 (operand)


State 145

   85 expression: expression point OR • point expression

    point  shift, and go to state 174


State 146

   84 expression: expression point AND • point expression

    point  shift, and go to state 175


State 147

   81 Condition: mcIF paraO expression paraF mcTHEN • INST_S mcELSE INST_S mcENDIF
   82          | mcIF paraO expression paraF mcTHEN • INST_S mcENDIF

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 176


State 148

   88 comparison: operand point GT • point operand

    point  shift, and go to state 177


State 149

   87 comparison: operand point EQ • point operand

    point  shift, and go to state 178


State 150

   89 comparison: operand point GE • point operand

    point  shift, and go to state 179


State 151

   90 comparison: operand point NE • point operand

    point  shift, and go to state 180


State 152

   91 comparison: operand point LE • point operand

    point  shift, and go to state 181


State 153

   92 comparison: operand point LT • point operand

    point  shift, and go to state 182


State 154

   80 Boucle: mcDOWHILE paraO expression paraF INSTR • mcENDO

    mcENDO  shift, and go to state 183


State 155

   73 Equivalence: PartageMemoire paraO Liste paraF virgule • paraO Liste paraF

    paraO  shift, and go to state 184


State 156

   40 APPEL_FONC: mcCALL identificateur paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 185


State 157

   50 MATH_VAR: paraO MATH_VAR paraF • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 186
    OPER       go to state 120


State 158

   42 MATH_VAR: identificateur paraO INTEGER • paraF MATH_VAR1
   43         | identificateur paraO INTEGER • virgule INTEGER paraF MATH_VAR1

    virgule  shift, and go to state 187
    paraF    shift, and go to state 188


State 159

   53 MATH_VAR1: INTEGERPOSITIF OPER • MATH_VAR

    paraO           shift, and go to state 66
    identificateur  shift, and go to state 67
    INTEGER         shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70
    REAL            shift, and go to state 71
    REALNEGATIF     shift, and go to state 74
    REALPOSITIF     shift, and go to state 75

    MATH_VAR  go to state 189


State 160

   52 MATH_VAR1: INTEGERNEGATIF OPER • MATH_VAR

    paraO           shift, and go to state 66
    identificateur  shift, and go to state 67
    INTEGER         shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70
    REAL            shift, and go to state 71
    REALNEGATIF     shift, and go to state 74
    REALPOSITIF     shift, and go to state 75

    MATH_VAR  go to state 190


State 161

   54 MATH_VAR1: REALNEGATIF OPER • MATH_VAR

    paraO           shift, and go to state 66
    identificateur  shift, and go to state 67
    INTEGER         shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70
    REAL            shift, and go to state 71
    REALNEGATIF     shift, and go to state 74
    REALPOSITIF     shift, and go to state 75

    MATH_VAR  go to state 191


State 162

   55 MATH_VAR1: REALPOSITIF OPER • MATH_VAR

    paraO           shift, and go to state 66
    identificateur  shift, and go to state 67
    INTEGER         shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70
    REAL            shift, and go to state 71
    REALNEGATIF     shift, and go to state 74
    REALPOSITIF     shift, and go to state 75

    MATH_VAR  go to state 192


State 163

   51 MATH_VAR1: OPER MATH_VAR •

    $default  reduce using rule 51 (MATH_VAR1)


State 164

   62 CHAINE_STRING1: plus IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 127
    mpins  shift, and go to state 128

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 193


State 165

   63 CHAINE_STRING1: mpins IDFI_CHAR • CHAINE_STRING1

    plus   shift, and go to state 127
    mpins  shift, and go to state 128

    $default  reduce using rule 64 (CHAINE_STRING1)

    CHAINE_STRING1  go to state 194


State 166

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule • INTEGER paraF DECLARATIONS2

    INTEGER  shift, and go to state 195


State 167

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER paraF • DECLARATIONS2

    mcDIMENSION    shift, and go to state 196
    point_virgule  shift, and go to state 197
    virgule        shift, and go to state 198

    DECLARATIONS2  go to state 199


State 168

    8 DECLARATIONS1: virgule identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 8 (DECLARATIONS1)


State 169

   78 Liste: identificateur paraO INTEGER virgule INTEGER • paraF

    paraF  shift, and go to state 200


State 170

   76 Liste: Liste virgule identificateur paraO INTEGER • paraF
   77      | Liste virgule identificateur paraO INTEGER • virgule INTEGER paraF

    virgule  shift, and go to state 201
    paraF    shift, and go to state 202


State 171

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur • eq EXPR mcENDR Fonction
   34 Affectation: identificateur • eq EXPR
   72 Appel: identificateur • paraO Liste paraF

    eq     shift, and go to state 203
    paraO  shift, and go to state 41


State 172

   71 ES_WRITE_OPTIONAL: virgule identificateur chaine •

    $default  reduce using rule 71 (ES_WRITE_OPTIONAL)


State 173

   98 operand: paraO operand • paraF

    paraF  shift, and go to state 141


State 174

   85 expression: expression point OR point • expression

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57

    $default  reduce using rule 93 (comparison)

    expression  go to state 204
    comparison  go to state 59
    operand     go to state 60


State 175

   84 expression: expression point AND point • expression

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 56
    identificateur  shift, and go to state 57

    $default  reduce using rule 93 (comparison)

    expression  go to state 205
    comparison  go to state 59
    operand     go to state 60


State 176

   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition
   81 Condition: mcIF paraO expression paraF mcTHEN INST_S • mcELSE INST_S mcENDIF
   82          | mcIF paraO expression paraF mcTHEN INST_S • mcENDIF

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcELSE          shift, and go to state 206
    mcENDIF         shift, and go to state 207
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 177

   88 comparison: operand point GT point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 208


State 178

   87 comparison: operand point EQ point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 209


State 179

   89 comparison: operand point GE point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 210


State 180

   90 comparison: operand point NE point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 211


State 181

   91 comparison: operand point LE point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 212


State 182

   92 comparison: operand point LT point • operand

    mcTRUE          shift, and go to state 54
    mcFALSE         shift, and go to state 55
    paraO           shift, and go to state 142
    identificateur  shift, and go to state 57

    operand  go to state 213


State 183

   80 Boucle: mcDOWHILE paraO expression paraF INSTR mcENDO •

    $default  reduce using rule 80 (Boucle)


State 184

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO • Liste paraF

    identificateur  shift, and go to state 33

    Liste  go to state 214


State 185

   40 APPEL_FONC: mcCALL identificateur paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 215


State 186

   50 MATH_VAR: paraO MATH_VAR paraF MATH_VAR1 •

    $default  reduce using rule 50 (MATH_VAR)


State 187

   43 MATH_VAR: identificateur paraO INTEGER virgule • INTEGER paraF MATH_VAR1

    INTEGER  shift, and go to state 216


State 188

   42 MATH_VAR: identificateur paraO INTEGER paraF • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 217
    OPER       go to state 120


State 189

   53 MATH_VAR1: INTEGERPOSITIF OPER MATH_VAR •

    $default  reduce using rule 53 (MATH_VAR1)


State 190

   52 MATH_VAR1: INTEGERNEGATIF OPER MATH_VAR •

    $default  reduce using rule 52 (MATH_VAR1)


State 191

   54 MATH_VAR1: REALNEGATIF OPER MATH_VAR •

    $default  reduce using rule 54 (MATH_VAR1)


State 192

   55 MATH_VAR1: REALPOSITIF OPER MATH_VAR •

    $default  reduce using rule 55 (MATH_VAR1)


State 193

   62 CHAINE_STRING1: plus IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 62 (CHAINE_STRING1)


State 194

   63 CHAINE_STRING1: mpins IDFI_CHAR CHAINE_STRING1 •

    $default  reduce using rule 63 (CHAINE_STRING1)


State 195

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER • paraF DECLARATIONS2

    paraF  shift, and go to state 218


State 196

   15 DECLARATIONS2: mcDIMENSION • paraO INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION • paraO INTEGER virgule INTEGER paraF DECLARATIONS1

    paraO  shift, and go to state 219


State 197

   12 DECLARATIONS2: point_virgule • DECLARATIONS
   13              | point_virgule •

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4

    $default  reduce using rule 13 (DECLARATIONS2)

    DECLARATIONS  go to state 220
    type          go to state 12


State 198

   14 DECLARATIONS2: virgule • identificateur caractere1 DECLARATIONS1

    identificateur  shift, and go to state 221


State 199

    9 DECLARATIONS1: mcDIMENSION paraO INTEGER paraF DECLARATIONS2 •

    $default  reduce using rule 9 (DECLARATIONS1)


State 200

   78 Liste: identificateur paraO INTEGER virgule INTEGER paraF •

    $default  reduce using rule 78 (Liste)


State 201

   77 Liste: Liste virgule identificateur paraO INTEGER virgule • INTEGER paraF

    INTEGER  shift, and go to state 222


State 202

   76 Liste: Liste virgule identificateur paraO INTEGER paraF •

    $default  reduce using rule 76 (Liste)


State 203

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq • EXPR mcENDR Fonction
   34 Affectation: identificateur eq • EXPR

    mcTRUE          shift, and go to state 63
    mcFALSE         shift, and go to state 64
    mcCALL          shift, and go to state 65
    paraO           shift, and go to state 66
    identificateur  shift, and go to state 67
    INTEGER         shift, and go to state 68
    INTEGERPOSITIF  shift, and go to state 69
    INTEGERNEGATIF  shift, and go to state 70
    REAL            shift, and go to state 71
    caracter        shift, and go to state 72
    chaine          shift, and go to state 73
    REALNEGATIF     shift, and go to state 74
    REALPOSITIF     shift, and go to state 75

    EXPR           go to state 223
    APPEL_FONC     go to state 77
    MATH_VAR       go to state 78
    CHAINE_STRING  go to state 79
    IDFI_CHAR      go to state 80


State 204

   84 expression: expression • point AND point expression
   85           | expression • point OR point expression
   85           | expression point OR point expression •

    $default  reduce using rule 85 (expression)


State 205

   84 expression: expression • point AND point expression
   84           | expression point AND point expression •
   85           | expression • point OR point expression

    $default  reduce using rule 84 (expression)


State 206

   81 Condition: mcIF paraO expression paraF mcTHEN INST_S mcELSE • INST_S mcENDIF

    $default  reduce using rule 27 (INST_S)

    INST_S  go to state 224


State 207

   82 Condition: mcIF paraO expression paraF mcTHEN INST_S mcENDIF •

    $default  reduce using rule 82 (Condition)


State 208

   88 comparison: operand point GT point operand •

    $default  reduce using rule 88 (comparison)


State 209

   87 comparison: operand point EQ point operand •

    $default  reduce using rule 87 (comparison)


State 210

   89 comparison: operand point GE point operand •

    $default  reduce using rule 89 (comparison)


State 211

   90 comparison: operand point NE point operand •

    $default  reduce using rule 90 (comparison)


State 212

   91 comparison: operand point LE point operand •

    $default  reduce using rule 91 (comparison)


State 213

   92 comparison: operand point LT point operand •

    $default  reduce using rule 92 (comparison)


State 214

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste • paraF
   75 Liste: Liste • virgule identificateur
   76      | Liste • virgule identificateur paraO INTEGER paraF
   77      | Liste • virgule identificateur paraO INTEGER virgule INTEGER paraF

    virgule  shift, and go to state 50
    paraF    shift, and go to state 225


State 215

   40 APPEL_FONC: mcCALL identificateur paraO Liste paraF •

    $default  reduce using rule 40 (APPEL_FONC)


State 216

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER • paraF MATH_VAR1

    paraF  shift, and go to state 226


State 217

   42 MATH_VAR: identificateur paraO INTEGER paraF MATH_VAR1 •

    $default  reduce using rule 42 (MATH_VAR)


State 218

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER paraF • DECLARATIONS2

    mcDIMENSION    shift, and go to state 196
    point_virgule  shift, and go to state 197
    virgule        shift, and go to state 198

    DECLARATIONS2  go to state 227


State 219

   15 DECLARATIONS2: mcDIMENSION paraO • INTEGER paraF DECLARATIONS1
   16              | mcDIMENSION paraO • INTEGER virgule INTEGER paraF DECLARATIONS1

    INTEGER  shift, and go to state 228


State 220

   12 DECLARATIONS2: point_virgule DECLARATIONS •

    $default  reduce using rule 12 (DECLARATIONS2)


State 221

   14 DECLARATIONS2: virgule identificateur • caractere1 DECLARATIONS1

    etoile  shift, and go to state 31

    $default  reduce using rule 5 (caractere1)

    caractere1  go to state 229


State 222

   77 Liste: Liste virgule identificateur paraO INTEGER virgule INTEGER • paraF

    paraF  shift, and go to state 230


State 223

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR • mcENDR Fonction
   34 Affectation: identificateur eq EXPR •

    mcENDR  shift, and go to state 231

    $default  reduce using rule 34 (Affectation)


State 224

   25 INST_S: INST_S • INSTR point_virgule
   26       | INST_S • Condition
   81 Condition: mcIF paraO expression paraF mcTHEN INST_S mcELSE INST_S • mcENDIF

    mcREAD          shift, and go to state 17
    mcWRITE         shift, and go to state 18
    mcIF            shift, and go to state 20
    mcENDIF         shift, and go to state 232
    mcDOWHILE       shift, and go to state 21
    PartageMemoire  shift, and go to state 22
    identificateur  shift, and go to state 23

    $default  reduce using rule 33 (INSTR)

    INSTR        go to state 24
    Affectation  go to state 25
    ES           go to state 26
    Appel        go to state 27
    Equivalence  go to state 28
    Boucle       go to state 29
    Condition    go to state 30


State 225

   73 Equivalence: PartageMemoire paraO Liste paraF virgule paraO Liste paraF •

    $default  reduce using rule 73 (Equivalence)


State 226

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER paraF • MATH_VAR1

    plus            shift, and go to state 110
    mpins           shift, and go to state 111
    division        shift, and go to state 112
    etoile          shift, and go to state 113
    INTEGERPOSITIF  shift, and go to state 115
    INTEGERNEGATIF  shift, and go to state 116
    REALNEGATIF     shift, and go to state 117
    REALPOSITIF     shift, and go to state 118

    $default  reduce using rule 60 (MATH_VAR1)

    MATH_VAR1  go to state 233
    OPER       go to state 120


State 227

   10 DECLARATIONS1: mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS2 •

    $default  reduce using rule 10 (DECLARATIONS1)


State 228

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER • paraF DECLARATIONS1
   16              | mcDIMENSION paraO INTEGER • virgule INTEGER paraF DECLARATIONS1

    virgule  shift, and go to state 234
    paraF    shift, and go to state 235


State 229

   14 DECLARATIONS2: virgule identificateur caractere1 • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 236


State 230

   77 Liste: Liste virgule identificateur paraO INTEGER virgule INTEGER paraF •

    $default  reduce using rule 77 (Liste)


State 231

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR • Fonction

    mcINTEGER    shift, and go to state 1
    mcREAL       shift, and go to state 2
    mcCHARACTER  shift, and go to state 3
    mcLOGICAL    shift, and go to state 4
    mcPROGRAM    shift, and go to state 5

    Fonction  go to state 237
    type      go to state 7


State 232

   81 Condition: mcIF paraO expression paraF mcTHEN INST_S mcELSE INST_S mcENDIF •

    $default  reduce using rule 81 (Condition)


State 233

   43 MATH_VAR: identificateur paraO INTEGER virgule INTEGER paraF MATH_VAR1 •

    $default  reduce using rule 43 (MATH_VAR)


State 234

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule • INTEGER paraF DECLARATIONS1

    INTEGER  shift, and go to state 238


State 235

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER paraF • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 239


State 236

   14 DECLARATIONS2: virgule identificateur caractere1 DECLARATIONS1 •

    $default  reduce using rule 14 (DECLARATIONS2)


State 237

    1 Fonction: type mcROUTINE identificateur paraO Liste paraF DECLARATIONS INST_S identificateur eq EXPR mcENDR Fonction •

    $default  reduce using rule 1 (Fonction)


State 238

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER • paraF DECLARATIONS1

    paraF  shift, and go to state 240


State 239

   15 DECLARATIONS2: mcDIMENSION paraO INTEGER paraF DECLARATIONS1 •

    $default  reduce using rule 15 (DECLARATIONS2)


State 240

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER paraF • DECLARATIONS1

    mcDIMENSION    shift, and go to state 44
    eq             shift, and go to state 45
    point_virgule  shift, and go to state 46
    virgule        shift, and go to state 47

    DECLARATIONS1  go to state 241


State 241

   16 DECLARATIONS2: mcDIMENSION paraO INTEGER virgule INTEGER paraF DECLARATIONS1 •

    $default  reduce using rule 16 (DECLARATIONS2)
